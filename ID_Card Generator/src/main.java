
import com.mysql.jdbc.Connection;
import java.awt.Color;
import java.awt.Event;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.PrintJob;
import java.awt.Toolkit;
import java.awt.geom.AffineTransform;
import java.awt.image.BufferedImage;
import java.awt.print.PrinterJob;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author DreamGuy
 */
public class main extends javax.swing.JFrame {

  
  /*  KeyStroke key1=KeyStroke.getKeyStroke(KeyEvent.VK_S,Event.CTRL_MASK);
    Action performSave=new AbstractAction("Add");
    {public void actionPerformed(Action e)
    {  System.out.print("Save");
            }
     }
 Jbutton b1=new JButton(performSave);
b1.getAction*/
            int i;
    String path,path1;
    public main() {	
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        search_mod = new javax.swing.JDialog();
        txt_srch = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel20 = new javax.swing.JLabel();
        delete_mod = new javax.swing.JDialog();
        txt_del = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jSeparator5 = new javax.swing.JSeparator();
        jLabel23 = new javax.swing.JLabel();
        update_mod = new javax.swing.JDialog();
        txt_up = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jSeparator6 = new javax.swing.JSeparator();
        jLabel26 = new javax.swing.JLabel();
        add_mod = new javax.swing.JDialog();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        jLabel52 = new javax.swing.JLabel();
        fname = new javax.swing.JTextField();
        jLabel53 = new javax.swing.JLabel();
        date = new javax.swing.JComboBox<>();
        jLabel54 = new javax.swing.JLabel();
        mon = new javax.swing.JComboBox<>();
        jLabel55 = new javax.swing.JLabel();
        year = new javax.swing.JComboBox<>();
        rad_oth = new javax.swing.JRadioButton();
        rad_fem = new javax.swing.JRadioButton();
        rad_male = new javax.swing.JRadioButton();
        jLabel14 = new javax.swing.JLabel();
        enrol = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        blood = new javax.swing.JComboBox<>();
        btn_upimg = new javax.swing.JButton();
        btn_cncl = new javax.swing.JButton();
        sep = new javax.swing.JSeparator();
        btn_sub = new javax.swing.JButton();
        lbl_reg = new javax.swing.JLabel();
        preview = new javax.swing.JLabel();
        btn = new javax.swing.JButton();
        jLabel45 = new javax.swing.JLabel();
        jLabel56 = new javax.swing.JLabel();
        cont = new javax.swing.JTextField();
        prog = new javax.swing.JComboBox<>();
        addmis = new javax.swing.JComboBox<>();
        clg = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        valid = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        addrs = new javax.swing.JTextArea();
        btn_up = new javax.swing.JButton();
        btn_print = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        print_mod = new javax.swing.JDialog();
        txt_print = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel27 = new javax.swing.JLabel();
        gender_grp = new javax.swing.ButtonGroup();
        frame = new javax.swing.JFrame();
        pan = new javax.swing.JPanel();
        lprog1 = new javax.swing.JLabel();
        ldob1 = new javax.swing.JLabel();
        lclg1 = new javax.swing.JLabel();
        lfname1 = new javax.swing.JLabel();
        lgen1 = new javax.swing.JLabel();
        lres1 = new javax.swing.JLabel();
        lvalid1 = new javax.swing.JLabel();
        lcon1 = new javax.swing.JLabel();
        ladd1 = new javax.swing.JLabel();
        lenrol1 = new javax.swing.JLabel();
        lblod1 = new javax.swing.JLabel();
        lname1 = new javax.swing.JLabel();
        jLabel71 = new javax.swing.JLabel();
        jLabel72 = new javax.swing.JLabel();
        jLabel73 = new javax.swing.JLabel();
        jLabel74 = new javax.swing.JLabel();
        jLabel75 = new javax.swing.JLabel();
        jLabel76 = new javax.swing.JLabel();
        jLabel77 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel78 = new javax.swing.JLabel();
        jLabel79 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        lpic1 = new javax.swing.JLabel();
        pr = new javax.swing.JButton();
        print = new javax.swing.JButton();
        add = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        submit = new javax.swing.JButton();
        update = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        srch = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        search_mod.setTitle("Search Record");
        search_mod.setLocation(new java.awt.Point(450, 250));
        search_mod.setMinimumSize(new java.awt.Dimension(480, 280));
        search_mod.getContentPane().setLayout(null);

        txt_srch.setNextFocusableComponent(jButton1);
        txt_srch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_srchActionPerformed(evt);
            }
        });
        search_mod.getContentPane().add(txt_srch);
        txt_srch.setBounds(60, 120, 130, 25);

        jLabel3.setFont(new java.awt.Font("Segoe Print", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Enrollment No.");
        search_mod.getContentPane().add(jLabel3);
        jLabel3.setBounds(10, 80, 150, 33);

        jLabel4.setFont(new java.awt.Font("Viner Hand ITC", 0, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Search Record");
        search_mod.getContentPane().add(jLabel4);
        jLabel4.setBounds(10, 10, 230, 39);

        jButton1.setFont(new java.awt.Font("Tempus Sans ITC", 0, 22)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Submit");
        jButton1.setContentAreaFilled(false);
        jButton1.setNextFocusableComponent(jButton2);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        search_mod.getContentPane().add(jButton1);
        jButton1.setBounds(0, 160, 100, 25);

        jButton2.setFont(new java.awt.Font("Tempus Sans ITC", 0, 22)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Cancel");
        jButton2.setContentAreaFilled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        search_mod.getContentPane().add(jButton2);
        jButton2.setBounds(110, 160, 100, 25);
        search_mod.getContentPane().add(jSeparator2);
        jSeparator2.setBounds(-10, 47, 250, 10);

        jLabel20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/old_book-t2.jpg"))); // NOI18N
        search_mod.getContentPane().add(jLabel20);
        jLabel20.setBounds(0, 0, 480, 280);

        delete_mod.setTitle("Delete Record");
        delete_mod.setLocation(new java.awt.Point(450, 250));
        delete_mod.setMinimumSize(new java.awt.Dimension(480, 280));
        delete_mod.getContentPane().setLayout(null);

        txt_del.setNextFocusableComponent(jButton10);
        txt_del.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_delActionPerformed(evt);
            }
        });
        delete_mod.getContentPane().add(txt_del);
        txt_del.setBounds(60, 120, 130, 25);

        jLabel21.setFont(new java.awt.Font("Segoe Print", 0, 18)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setText("Enrollment No.");
        delete_mod.getContentPane().add(jLabel21);
        jLabel21.setBounds(10, 80, 150, 33);

        jLabel22.setFont(new java.awt.Font("Viner Hand ITC", 0, 24)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("Delete Record");
        delete_mod.getContentPane().add(jLabel22);
        jLabel22.setBounds(10, 10, 230, 39);

        jButton10.setFont(new java.awt.Font("Tempus Sans ITC", 0, 22)); // NOI18N
        jButton10.setForeground(new java.awt.Color(255, 255, 255));
        jButton10.setText("Submit");
        jButton10.setContentAreaFilled(false);
        jButton10.setName(""); // NOI18N
        jButton10.setNextFocusableComponent(jButton11);
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        delete_mod.getContentPane().add(jButton10);
        jButton10.setBounds(0, 160, 100, 25);

        jButton11.setFont(new java.awt.Font("Tempus Sans ITC", 0, 22)); // NOI18N
        jButton11.setForeground(new java.awt.Color(255, 255, 255));
        jButton11.setText("Cancel");
        jButton11.setContentAreaFilled(false);
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        delete_mod.getContentPane().add(jButton11);
        jButton11.setBounds(110, 160, 100, 25);
        delete_mod.getContentPane().add(jSeparator5);
        jSeparator5.setBounds(-10, 47, 250, 10);

        jLabel23.setIcon(new javax.swing.ImageIcon(getClass().getResource("/old_book-t2.jpg"))); // NOI18N
        delete_mod.getContentPane().add(jLabel23);
        jLabel23.setBounds(0, 0, 480, 300);

        update_mod.setTitle("Update Record");
        update_mod.setLocation(new java.awt.Point(450, 250));
        update_mod.setMinimumSize(new java.awt.Dimension(480, 280));
        update_mod.getContentPane().setLayout(null);

        txt_up.setNextFocusableComponent(jButton12);
        txt_up.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_upActionPerformed(evt);
            }
        });
        update_mod.getContentPane().add(txt_up);
        txt_up.setBounds(60, 120, 130, 25);

        jLabel24.setFont(new java.awt.Font("Segoe Print", 0, 18)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(255, 255, 255));
        jLabel24.setText("Enrollment No.");
        update_mod.getContentPane().add(jLabel24);
        jLabel24.setBounds(10, 80, 150, 33);

        jLabel25.setFont(new java.awt.Font("Viner Hand ITC", 0, 24)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setText("Update Record");
        update_mod.getContentPane().add(jLabel25);
        jLabel25.setBounds(10, 8, 230, 39);

        jButton12.setFont(new java.awt.Font("Tempus Sans ITC", 0, 22)); // NOI18N
        jButton12.setForeground(new java.awt.Color(255, 255, 255));
        jButton12.setText("Submit");
        jButton12.setContentAreaFilled(false);
        jButton12.setNextFocusableComponent(jButton13);
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        update_mod.getContentPane().add(jButton12);
        jButton12.setBounds(0, 160, 100, 25);

        jButton13.setFont(new java.awt.Font("Tempus Sans ITC", 0, 22)); // NOI18N
        jButton13.setForeground(new java.awt.Color(255, 255, 255));
        jButton13.setText("Cancel");
        jButton13.setContentAreaFilled(false);
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });
        update_mod.getContentPane().add(jButton13);
        jButton13.setBounds(110, 160, 100, 25);
        update_mod.getContentPane().add(jSeparator6);
        jSeparator6.setBounds(-10, 47, 250, 10);

        jLabel26.setIcon(new javax.swing.ImageIcon(getClass().getResource("/old_book-t2.jpg"))); // NOI18N
        update_mod.getContentPane().add(jLabel26);
        jLabel26.setBounds(0, 0, 480, 280);

        add_mod.setTitle("Registration");
        add_mod.setAutoRequestFocus(false);
        add_mod.setLocation(new java.awt.Point(310, 75));
        add_mod.setMinimumSize(new java.awt.Dimension(780, 592));
        add_mod.getContentPane().setLayout(null);

        jLabel40.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel40.setForeground(new java.awt.Color(0, 0, 153));
        jLabel40.setText("Name :");
        add_mod.getContentPane().add(jLabel40);
        jLabel40.setBounds(20, 105, 44, 20);

        jLabel41.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel41.setForeground(new java.awt.Color(0, 0, 153));
        jLabel41.setText("Father's Name :");
        add_mod.getContentPane().add(jLabel41);
        jLabel41.setBounds(20, 140, 96, 19);

        jLabel42.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel42.setForeground(new java.awt.Color(0, 0, 153));
        jLabel42.setText("Date of Birth :");
        add_mod.getContentPane().add(jLabel42);
        jLabel42.setBounds(20, 180, 85, 19);

        jLabel43.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel43.setForeground(new java.awt.Color(0, 0, 153));
        jLabel43.setText("Gender :");
        add_mod.getContentPane().add(jLabel43);
        jLabel43.setBounds(20, 215, 52, 19);

        jLabel44.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel44.setForeground(new java.awt.Color(0, 0, 153));
        jLabel44.setText("Programme :");
        add_mod.getContentPane().add(jLabel44);
        jLabel44.setBounds(20, 245, 90, 19);

        jLabel49.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel49.setForeground(new java.awt.Color(0, 0, 153));
        jLabel49.setText("College Name :");
        add_mod.getContentPane().add(jLabel49);
        jLabel49.setBounds(20, 315, 100, 19);

        name.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        name.setToolTipText("");
        name.setNextFocusableComponent(fname);
        name.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                nameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                nameFocusLost(evt);
            }
        });
        name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameActionPerformed(evt);
            }
        });
        add_mod.getContentPane().add(name);
        name.setBounds(150, 105, 290, 26);

        jLabel52.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel52.setForeground(new java.awt.Color(0, 0, 153));
        jLabel52.setText("Residence :");
        add_mod.getContentPane().add(jLabel52);
        jLabel52.setBounds(20, 415, 90, 19);

        fname.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        fname.setNextFocusableComponent(date);
        fname.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                fnameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                fnameFocusLost(evt);
            }
        });
        fname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fnameActionPerformed(evt);
            }
        });
        add_mod.getContentPane().add(fname);
        fname.setBounds(150, 140, 290, 26);

        jLabel53.setForeground(new java.awt.Color(255, 255, 255));
        jLabel53.setText("Date ");
        add_mod.getContentPane().add(jLabel53);
        jLabel53.setBounds(150, 185, 40, 14);

        date.setMaximumRowCount(10);
        date.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        date.setNextFocusableComponent(mon);
        date.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                dateFocusLost(evt);
            }
        });
        date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateActionPerformed(evt);
            }
        });
        add_mod.getContentPane().add(date);
        date.setBounds(175, 180, 68, 24);

        jLabel54.setForeground(new java.awt.Color(255, 255, 255));
        jLabel54.setText("Month");
        add_mod.getContentPane().add(jLabel54);
        jLabel54.setBounds(245, 185, 50, 14);

        mon.setMaximumRowCount(10);
        mon.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" }));
        mon.setLightWeightPopupEnabled(false);
        mon.setNextFocusableComponent(year);
        mon.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                monFocusLost(evt);
            }
        });
        mon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monActionPerformed(evt);
            }
        });
        add_mod.getContentPane().add(mon);
        mon.setBounds(277, 180, 68, 24);

        jLabel55.setForeground(new java.awt.Color(255, 255, 255));
        jLabel55.setText("Year");
        add_mod.getContentPane().add(jLabel55);
        jLabel55.setBounds(350, 185, 50, 14);

        year.setMaximumRowCount(10);
        year.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "1985", "1986", "1987", "1988", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", " " }));
        year.setNextFocusableComponent(rad_male);
        year.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yearActionPerformed(evt);
            }
        });
        add_mod.getContentPane().add(year);
        year.setBounds(375, 180, 68, 24);

        gender_grp.add(rad_oth);
        rad_oth.setForeground(new java.awt.Color(255, 255, 255));
        rad_oth.setText("Others");
        rad_oth.setContentAreaFilled(false);
        rad_oth.setNextFocusableComponent(prog);
        rad_oth.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                rad_othFocusLost(evt);
            }
        });
        add_mod.getContentPane().add(rad_oth);
        rad_oth.setBounds(290, 215, 80, 23);

        gender_grp.add(rad_fem);
        rad_fem.setForeground(new java.awt.Color(255, 255, 255));
        rad_fem.setText("Female");
        rad_fem.setContentAreaFilled(false);
        rad_fem.setNextFocusableComponent(rad_oth);
        rad_fem.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                rad_femFocusLost(evt);
            }
        });
        add_mod.getContentPane().add(rad_fem);
        rad_fem.setBounds(220, 215, 80, 23);

        gender_grp.add(rad_male);
        rad_male.setForeground(new java.awt.Color(255, 255, 255));
        rad_male.setText("Male");
        rad_male.setContentAreaFilled(false);
        rad_male.setNextFocusableComponent(rad_fem);
        rad_male.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                rad_maleFocusLost(evt);
            }
        });
        add_mod.getContentPane().add(rad_male);
        rad_male.setBounds(150, 215, 60, 23);

        jLabel14.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 0, 153));
        jLabel14.setText("Enrollment No.");
        add_mod.getContentPane().add(jLabel14);
        jLabel14.setBounds(470, 105, 100, 20);

        enrol.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        enrol.setNextFocusableComponent(blood);
        enrol.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                enrolFocusGained(evt);
            }
        });
        add_mod.getContentPane().add(enrol);
        enrol.setBounds(580, 105, 117, 26);

        jLabel15.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(0, 0, 153));
        jLabel15.setText("Blood Group:");
        add_mod.getContentPane().add(jLabel15);
        jLabel15.setBounds(470, 142, 100, 20);

        blood.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "O+", "B-", "B+", "A+", "A-", "AB+", "AB-", "ABO+" }));
        blood.setNextFocusableComponent(btn_upimg);
        add_mod.getContentPane().add(blood);
        blood.setBounds(580, 140, 80, 24);

        btn_upimg.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        btn_upimg.setText("Upload Image");
        btn_upimg.setNextFocusableComponent(btn_sub);
        btn_upimg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_upimgActionPerformed(evt);
            }
        });
        add_mod.getContentPane().add(btn_upimg);
        btn_upimg.setBounds(570, 210, 117, 30);

        btn_cncl.setText("Cancel");
        btn_cncl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cnclActionPerformed(evt);
            }
        });
        add_mod.getContentPane().add(btn_cncl);
        btn_cncl.setBounds(170, 510, 100, 30);
        add_mod.getContentPane().add(sep);
        sep.setBounds(0, 72, 790, 10);

        btn_sub.setText("Submit");
        btn_sub.setNextFocusableComponent(btn_cncl);
        btn_sub.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_subActionPerformed(evt);
            }
        });
        add_mod.getContentPane().add(btn_sub);
        btn_sub.setBounds(350, 510, 90, 30);

        lbl_reg.setFont(new java.awt.Font("Viner Hand ITC", 0, 45)); // NOI18N
        lbl_reg.setForeground(new java.awt.Color(255, 255, 255));
        lbl_reg.setText("Registration");
        add_mod.getContentPane().add(lbl_reg);
        lbl_reg.setBounds(30, 20, 310, 50);
        add_mod.getContentPane().add(preview);
        preview.setBounds(550, 260, 150, 150);

        btn.setIcon(new javax.swing.ImageIcon("C:\\Users\\DreamGuy\\Videos\\submit-iloveimg-cropped-iloveimg-resized.gif")); // NOI18N
        btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActionPerformed(evt);
            }
        });
        add_mod.getContentPane().add(btn);
        btn.setBounds(470, 510, 100, 30);

        jLabel45.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel45.setForeground(new java.awt.Color(0, 0, 153));
        jLabel45.setText("Admission Session :");
        add_mod.getContentPane().add(jLabel45);
        jLabel45.setBounds(20, 280, 130, 19);

        jLabel56.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel56.setForeground(new java.awt.Color(0, 0, 153));
        jLabel56.setText("Contact :");
        add_mod.getContentPane().add(jLabel56);
        jLabel56.setBounds(20, 385, 55, 19);

        cont.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cont.setNextFocusableComponent(addrs);
        cont.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                contFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                contFocusLost(evt);
            }
        });
        cont.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contActionPerformed(evt);
            }
        });
        add_mod.getContentPane().add(cont);
        cont.setBounds(150, 385, 290, 26);

        prog.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "B.TECH(CSE)", "B.TECH(i-Nurture)", "B.TECH(IBM)", "BCA", "B.Sc(CS)", "M.TECH(CSE)", "MCA", " ", " " }));
        prog.setNextFocusableComponent(addmis);
        prog.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                progMousePressed(evt);
            }
        });
        add_mod.getContentPane().add(prog);
        prog.setBounds(150, 245, 290, 26);

        addmis.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "2014-15", "2015-16", "2016-17", "2017-18", " " }));
        addmis.setNextFocusableComponent(clg);
        add_mod.getContentPane().add(addmis);
        addmis.setBounds(150, 280, 290, 26);

        clg.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "CCSIT", "FOE", "COA", "CON", "COP", "TMDC", "TMMC" }));
        clg.setNextFocusableComponent(valid);
        add_mod.getContentPane().add(clg);
        clg.setBounds(150, 315, 290, 26);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 153));
        jLabel1.setText("Valid Upto :");
        add_mod.getContentPane().add(jLabel1);
        jLabel1.setBounds(20, 350, 90, 19);

        valid.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "2018", "2019", "2020", "2021", "2022", "2023", "2024", "2025" }));
        valid.setNextFocusableComponent(cont);
        add_mod.getContentPane().add(valid);
        valid.setBounds(150, 350, 290, 26);

        addrs.setColumns(20);
        addrs.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        addrs.setRows(5);
        addrs.setNextFocusableComponent(enrol);
        addrs.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                addrsFocusGained(evt);
            }
        });
        jScrollPane1.setViewportView(addrs);

        add_mod.getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(150, 420, 290, 70);

        btn_up.setText("Update");
        btn_up.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_upActionPerformed(evt);
            }
        });
        add_mod.getContentPane().add(btn_up);
        btn_up.setBounds(310, 510, 90, 30);

        btn_print.setText("Print");
        btn_print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_printActionPerformed(evt);
            }
        });
        add_mod.getContentPane().add(btn_print);
        btn_print.setBounds(290, 510, 90, 30);

        jLabel9.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/header-background.png"))); // NOI18N
        add_mod.getContentPane().add(jLabel9);
        jLabel9.setBounds(0, 0, 770, 560);

        print_mod.setTitle("Print Record");
        print_mod.setLocation(new java.awt.Point(450, 250));
        print_mod.setMinimumSize(new java.awt.Dimension(480, 280));
        print_mod.getContentPane().setLayout(null);

        txt_print.setNextFocusableComponent(jButton3);
        txt_print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_printActionPerformed(evt);
            }
        });
        print_mod.getContentPane().add(txt_print);
        txt_print.setBounds(60, 120, 130, 25);

        jLabel5.setFont(new java.awt.Font("Segoe Print", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Enrollment No.");
        print_mod.getContentPane().add(jLabel5);
        jLabel5.setBounds(10, 80, 150, 33);

        jLabel6.setFont(new java.awt.Font("Viner Hand ITC", 0, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Print Record");
        print_mod.getContentPane().add(jLabel6);
        jLabel6.setBounds(10, 10, 230, 39);

        jButton3.setFont(new java.awt.Font("Tempus Sans ITC", 0, 22)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Submit");
        jButton3.setContentAreaFilled(false);
        jButton3.setNextFocusableComponent(jButton4);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        print_mod.getContentPane().add(jButton3);
        jButton3.setBounds(0, 160, 110, 27);

        jButton4.setFont(new java.awt.Font("Tempus Sans ITC", 0, 22)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Cancel");
        jButton4.setContentAreaFilled(false);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        print_mod.getContentPane().add(jButton4);
        jButton4.setBounds(110, 160, 110, 27);
        print_mod.getContentPane().add(jSeparator3);
        jSeparator3.setBounds(-10, 47, 250, 10);

        jLabel27.setIcon(new javax.swing.ImageIcon(getClass().getResource("/old_book-t2.jpg"))); // NOI18N
        print_mod.getContentPane().add(jLabel27);
        jLabel27.setBounds(0, 0, 480, 280);

        frame.setLocation(new java.awt.Point(450, 170));
        frame.setMinimumSize(new java.awt.Dimension(480, 430));

        pan.setAlignmentX(0.0F);
        pan.setAlignmentY(0.0F);
        pan.setLayout(null);

        lprog1.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        lprog1.setText("Programme :");
        pan.add(lprog1);
        lprog1.setBounds(170, 200, 160, 19);

        ldob1.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        ldob1.setText("Date of Birth :");
        pan.add(ldob1);
        ldob1.setBounds(170, 160, 160, 19);

        lclg1.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        lclg1.setText("College Name :");
        pan.add(lclg1);
        lclg1.setBounds(170, 240, 160, 19);

        lfname1.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        lfname1.setText("Father's Name :");
        pan.add(lfname1);
        lfname1.setBounds(170, 140, 160, 19);

        lgen1.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        lgen1.setText("Gender :");
        pan.add(lgen1);
        lgen1.setBounds(170, 180, 160, 19);

        lres1.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        lres1.setText("Residence :");
        pan.add(lres1);
        lres1.setBounds(170, 300, 160, 19);

        lvalid1.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        lvalid1.setText("Valid Upto :");
        pan.add(lvalid1);
        lvalid1.setBounds(170, 260, 160, 19);

        lcon1.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        lcon1.setText("Contact :");
        pan.add(lcon1);
        lcon1.setBounds(170, 280, 160, 19);

        ladd1.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        ladd1.setText("Admission Session :");
        pan.add(ladd1);
        ladd1.setBounds(170, 220, 160, 19);

        lenrol1.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        lenrol1.setText("Enrollment No.");
        pan.add(lenrol1);
        lenrol1.setBounds(170, 100, 160, 20);

        lblod1.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        lblod1.setText("lbold");
        pan.add(lblod1);
        lblod1.setBounds(170, 320, 160, 20);

        lname1.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        lname1.setText("Name :");
        pan.add(lname1);
        lname1.setBounds(170, 120, 160, 20);

        jLabel71.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel71.setText("Name :");
        pan.add(jLabel71);
        jLabel71.setBounds(20, 120, 44, 20);

        jLabel72.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel72.setText("Father's Name :");
        pan.add(jLabel72);
        jLabel72.setBounds(20, 140, 96, 19);

        jLabel73.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel73.setText("Date of Birth :");
        pan.add(jLabel73);
        jLabel73.setBounds(20, 160, 85, 19);

        jLabel74.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel74.setText("Gender :");
        pan.add(jLabel74);
        jLabel74.setBounds(20, 180, 52, 19);

        jLabel75.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel75.setText("Programme :");
        pan.add(jLabel75);
        jLabel75.setBounds(20, 200, 90, 19);

        jLabel76.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel76.setText("Admission Session :");
        pan.add(jLabel76);
        jLabel76.setBounds(20, 220, 130, 19);

        jLabel77.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel77.setText("College Name :");
        pan.add(jLabel77);
        jLabel77.setBounds(20, 240, 100, 19);

        jLabel29.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel29.setText("Valid Upto :");
        pan.add(jLabel29);
        jLabel29.setBounds(20, 260, 90, 19);

        jLabel78.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel78.setText("Contact :");
        pan.add(jLabel78);
        jLabel78.setBounds(20, 280, 55, 19);

        jLabel79.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel79.setText("Residence :");
        pan.add(jLabel79);
        jLabel79.setBounds(20, 300, 90, 19);

        jLabel30.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel30.setText("Enrollment No.:");
        pan.add(jLabel30);
        jLabel30.setBounds(20, 100, 100, 20);

        jLabel31.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel31.setText("Blood Group:");
        pan.add(jLabel31);
        jLabel31.setBounds(20, 320, 100, 20);

        jLabel16.setBackground(new java.awt.Color(255, 153, 153));
        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/logo.png"))); // NOI18N
        pan.add(jLabel16);
        jLabel16.setBounds(5, 5, 340, 70);
        pan.add(lpic1);
        lpic1.setBounds(340, 100, 110, 100);

        pr.setText("Print");
        pr.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                prMousePressed(evt);
            }
        });
        pr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout frameLayout = new javax.swing.GroupLayout(frame.getContentPane());
        frame.getContentPane().setLayout(frameLayout);
        frameLayout.setHorizontalGroup(
            frameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(frameLayout.createSequentialGroup()
                .addComponent(pan, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(frameLayout.createSequentialGroup()
                .addGap(172, 172, 172)
                .addComponent(pr, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        frameLayout.setVerticalGroup(
            frameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(frameLayout.createSequentialGroup()
                .addComponent(pan, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pr)
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ID Card ");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setFocusCycleRoot(false);
        setLocation(new java.awt.Point(50, 200));
        setMinimumSize(new java.awt.Dimension(516, 588));
        getContentPane().setLayout(null);

        print.setBackground(new java.awt.Color(146, 192, 32));
        print.setFont(new java.awt.Font("Gabriola", 1, 37)); // NOI18N
        print.setForeground(new java.awt.Color(255, 255, 255));
        print.setMnemonic('4');
        print.setText("Print");
        print.setToolTipText("Print Record");
        print.setBorderPainted(false);
        print.setContentAreaFilled(false);
        print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printActionPerformed(evt);
            }
        });
        getContentPane().add(print);
        print.setBounds(210, 450, 110, 30);

        add.setBackground(new java.awt.Color(49, 168, 224));
        add.setFont(new java.awt.Font("Gabriola", 1, 40)); // NOI18N
        add.setForeground(new java.awt.Color(255, 255, 255));
        add.setMnemonic('1');
        add.setText("Add");
        add.setToolTipText("Add Record");
        add.setBorderPainted(false);
        add.setContentAreaFilled(false);
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });
        getContentPane().add(add);
        add.setBounds(210, 190, 100, 27);

        jLabel11.setIcon(new javax.swing.ImageIcon("C:\\Users\\DreamGuy\\Downloads\\line-iloveimg-cropped (1).gif")); // NOI18N
        getContentPane().add(jLabel11);
        jLabel11.setBounds(-20, 99, 520, 2);

        submit.setBackground(new java.awt.Color(31, 161, 153));
        submit.setFont(new java.awt.Font("Gabriola", 1, 40)); // NOI18N
        submit.setForeground(new java.awt.Color(255, 255, 255));
        submit.setMnemonic('6');
        submit.setText("Exit");
        submit.setToolTipText("Exit");
        submit.setBorderPainted(false);
        submit.setContentAreaFilled(false);
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });
        getContentPane().add(submit);
        submit.setBounds(100, 250, 100, 30);

        update.setBackground(new java.awt.Color(255, 51, 0));
        update.setFont(new java.awt.Font("Gabriola", 1, 30)); // NOI18N
        update.setForeground(new java.awt.Color(255, 255, 255));
        update.setMnemonic('3');
        update.setText("Update");
        update.setToolTipText("Update Record");
        update.setBorderPainted(false);
        update.setContentAreaFilled(false);
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });
        getContentPane().add(update);
        update.setBounds(320, 380, 120, 28);

        delete.setBackground(new java.awt.Color(189, 21, 34));
        delete.setFont(new java.awt.Font("Gabriola", 1, 35)); // NOI18N
        delete.setForeground(new java.awt.Color(255, 255, 255));
        delete.setMnemonic('5');
        delete.setText("Delete");
        delete.setToolTipText("Delete Record");
        delete.setBorderPainted(false);
        delete.setContentAreaFilled(false);
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        getContentPane().add(delete);
        delete.setBounds(80, 390, 130, 30);

        srch.setBackground(new java.awt.Color(214, 12, 85));
        srch.setFont(new java.awt.Font("Gabriola", 1, 35)); // NOI18N
        srch.setForeground(new java.awt.Color(255, 255, 255));
        srch.setMnemonic('2');
        srch.setText("Search");
        srch.setToolTipText("Search Record");
        srch.setBorderPainted(false);
        srch.setContentAreaFilled(false);
        srch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                srchActionPerformed(evt);
            }
        });
        getContentPane().add(srch);
        srch.setBounds(320, 250, 120, 30);

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resize.gif"))); // NOI18N
        getContentPane().add(jLabel8);
        jLabel8.setBounds(0, 0, 100, 98);

        jLabel13.setIcon(new javax.swing.ImageIcon("C:\\Users\\DreamGuy\\Videos\\colle-330_hdr__102811012614 - Copy.jpg")); // NOI18N
        getContentPane().add(jLabel13);
        jLabel13.setBounds(101, 10, 410, 80);

        jLabel12.setIcon(new javax.swing.ImageIcon("C:\\Users\\DreamGuy\\Videos\\loggggg.jpg")); // NOI18N
        getContentPane().add(jLabel12);
        jLabel12.setBounds(99, 0, 400, 98);

        jLabel7.setIcon(new javax.swing.ImageIcon("C:\\Users\\DreamGuy\\Videos\\aaa.jpg")); // NOI18N
        getContentPane().add(jLabel7);
        jLabel7.setBounds(0, 100, 500, 450);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        print_mod.setVisible(true);
        print_mod.setVisible(false);
        btn_print.setVisible(false);
        add_mod.setVisible(true);
        btn_up.setVisible(false);
        enrol.setEditable(true);
        name.setEditable(true);
        fname.setEditable(true);
        prog.setEditable(false);
        addmis.setEditable(false);
        clg.setEditable(false);
        valid.setEditable(false);
        cont.setEditable(true);
        addrs.setEditable(true);
        blood.setEditable(false);
        btn_sub.setVisible(true);
        btn_cncl.setVisible(true);
        sep.setVisible(true);
        btn_upimg.setVisible(true);
         
       //default values
         btn.setVisible(false);
        enrol.setText("");
        name.setText("");
        fname.setText("");
        date.setSelectedIndex(0);       
        mon.setSelectedIndex(0);       
        year.setSelectedIndex(0);       
        prog.setSelectedIndex(0);       
        addmis.setSelectedIndex(0);
        clg.setSelectedIndex(0);
        valid.setSelectedIndex(0);
        cont.setText("");
        addrs.setText("");
        blood.setSelectedIndex(0);       
    }//GEN-LAST:event_addActionPerformed

    private void submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitActionPerformed
        
       System.exit(0);
    }//GEN-LAST:event_submitActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
            
        txt_del.setText("");
        delete_mod.setVisible(true);
        
    }//GEN-LAST:event_deleteActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
       txt_up.setText("");
       update_mod.setVisible(true);     
    }//GEN-LAST:event_updateActionPerformed

    private void txt_srchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_srchActionPerformed
         String stxt=txt_srch.getText();
        if(stxt.isEmpty())
        { JOptionPane.showMessageDialog(null,"Input Required.");
        }
        else
        { System.out.println(name);
        try
        {
        Class.forName("java.sql.Driver");
          Connection conn=(Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/swapnil","root","sj");
          
        
        
        PreparedStatement pstmt =conn.prepareStatement("select * from card where enroll='"+stxt+"'");
        ResultSet rs=pstmt.executeQuery();
        if(rs.next())
        {
        enrol.setText(rs.getString("ENROLL"));
        enrol.setEditable(false);
        name.setText(rs.getString("NAME"));
        name.setEditable(false);
        fname.setText(rs.getString("FNAME"));
        fname.setEditable(false);
        String dateinter=rs.getString("DOB");
        String dd=dateinter.substring(0,2);
        String mm=dateinter.substring(3,6);
        String yy=dateinter.substring(7,11);
        date.setSelectedItem(dd);
        mon.setSelectedItem(mm);
        year.setSelectedItem(yy); 
        String ss=rs.getString("GENDER");
        System.out.print(ss);
        if(ss.equals("Male"))
        { rad_male.setSelected(true); }
        if(ss.equals("Female"))
        { rad_fem.setSelected(true); }
        if(ss.equals("Others"))
        { rad_oth.setSelected(true); }   
        prog.setSelectedItem(rs.getString("PROG"));
        prog.setEditable(false);
        addmis.setSelectedItem(rs.getString("ADMISSON"));
        addmis.setEditable(false);
        clg.setSelectedItem(rs.getString("COLLEGE"));
        clg.setEditable(false);
        valid.setSelectedItem(rs.getString("VALID"));
        valid.setEditable(false);
        cont.setText(rs.getString("CONTACT"));
        cont.setEditable(false);
        addrs.setText(rs.getString("RESIDENCE"));
        addrs.setEditable(false);
        blood.setSelectedItem(rs.getString("BLOOD"));
        blood.setEditable(false);
        new main().setTitle("Searched Result for :"+stxt);
        
         //setting image
         InputStream inP=rs.getBinaryStream("IMAGE");    //this is returning null IN some case
         //System.out.println(inP);
         BufferedImage im=null;
         try
         {
         im=ImageIO.read(inP);
         }
         catch(IOException e)
         {
             System.out.println("Error in reading image from database"+e);
         }
         BufferedImage outimage =new BufferedImage(im.getWidth(),im.getHeight(),BufferedImage.TYPE_INT_RGB);
         Graphics2D g=outimage.createGraphics();
         
         float xScale=(float)im.getWidth()/outimage.getWidth();
         float yScale=(float)im.getHeight()/outimage.getHeight();
         AffineTransform at=AffineTransform.getScaleInstance(xScale,yScale);
         g.drawRenderedImage(im, at);
         g.dispose();
         Image scaledImage=outimage.getScaledInstance(im.getWidth(),im.getHeight(),im.SCALE_SMOOTH);
         ImageIcon icon=new ImageIcon(scaledImage);
         preview.setIcon(icon);
         
         btn.setVisible(false);
         lbl_reg.setVisible(false);
         btn_sub.setVisible(false);
         btn_cncl.setText("Back");
         btn_cncl.setVisible(true);
         btn_print.setVisible(false);`
         sep.setVisible(false);
         btn_upimg.setVisible(false);
         btn_up.setVisible(false);
         //image set now
         add_mod.setVisible(true);
        }
        else
        {
        JOptionPane.showMessageDialog(null,"NO RECORD FOUND");
        }
      }
      catch(Exception e)
      {
      System.out.println("Error in connection"+e);
      }
     } 
        search_mod.dispose();
    }//GEN-LAST:event_txt_srchActionPerformed

    private void srchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_srchActionPerformed
        txt_srch.setText("");
        search_mod.setVisible(true);
         
    }//GEN-LAST:event_srchActionPerformed

    private void printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printActionPerformed
        
        txt_print.setText("");
        print_mod.setVisible(true);
        
    }//GEN-LAST:event_printActionPerformed

    private void nameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nameFocusGained
         name.setBackground(Color.white); 
    }//GEN-LAST:event_nameFocusGained

    private void nameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nameFocusLost
        
    }//GEN-LAST:event_nameFocusLost

    private void nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameActionPerformed
        
    }//GEN-LAST:event_nameActionPerformed

    private void fnameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fnameFocusGained
        fname.setBackground(Color.white);         
    }//GEN-LAST:event_fnameFocusGained

    private void fnameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fnameFocusLost
        
    }//GEN-LAST:event_fnameFocusLost

    private void dateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dateFocusLost
        
    }//GEN-LAST:event_dateFocusLost

    private void dateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateActionPerformed
        
    }//GEN-LAST:event_dateActionPerformed

    private void monFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_monFocusLost
        
    }//GEN-LAST:event_monFocusLost

    private void monActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monActionPerformed
        
    }//GEN-LAST:event_monActionPerformed

    private void yearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yearActionPerformed
        
    }//GEN-LAST:event_yearActionPerformed

    private void rad_othFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_rad_othFocusLost
        
    }//GEN-LAST:event_rad_othFocusLost

    private void rad_femFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_rad_femFocusLost
        
    }//GEN-LAST:event_rad_femFocusLost

    private void rad_maleFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_rad_maleFocusLost
        
    }//GEN-LAST:event_rad_maleFocusLost

    private void txt_delActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_delActionPerformed
              String del=txt_del.getText();
      if(del.isEmpty())
{
JOptionPane.showMessageDialog(null,"Input Required");
}
else
{
System.out.println(del);
try
        {
       Class.forName("java.sql.Driver");
          Connection conn=(Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/swapnil","root","sj");
        
        PreparedStatement pstmt =conn.prepareStatement("delete  from card where enroll='"+del+"'");
        int t=pstmt.executeUpdate();
        if(t>0)
        {
        JOptionPane.showMessageDialog(null,"Success Record Deleted ! ");
        }
       else
        {
        JOptionPane.showMessageDialog(null,"Record not found.");
        }
        
        }
catch(Exception e)
{ System.out.println("Error:In connection "+e);}
}    
delete_mod.dispose();
    }//GEN-LAST:event_txt_delActionPerformed

    private void txt_upActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_upActionPerformed
     btn_sub.setVisible(false);
        String up=txt_up.getText();
        if(up.isEmpty())
        { JOptionPane.showMessageDialog(null,"Input Required.");
        }
        else
        { System.out.println(name);
        try
        {
        Class.forName("java.sql.Driver");
          Connection conn=(Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/swapnil","root","sj");
          
        
        
        PreparedStatement pstmt =conn.prepareStatement("select * from card where enroll='"+up+"'");
        ResultSet rs=pstmt.executeQuery();
        if(rs.next())
        {
        enrol.setText(rs.getString("ENROLL"));
        enrol.setEditable(true);
        name.setText(rs.getString("NAME"));
        name.setEditable(true);
        fname.setText(rs.getString("FNAME"));
        fname.setEditable(true);
        String dateinter=rs.getString("DOB");
        String dd=dateinter.substring(0,2);
        String mm=dateinter.substring(3,6);
        String yy=dateinter.substring(7,11);
        date.setSelectedItem(dd);
        mon.setSelectedItem(mm);
        year.setSelectedItem(yy); 
        String ss=rs.getString("GENDER");
        System.out.print(ss);
        if(ss.equals("Male"))
        { rad_male.setSelected(true); }
        if(ss.equals("Female"))
        { rad_fem.setSelected(true); }
        if(ss.equals("Others"))
        { rad_oth.setSelected(true); }   
        prog.setSelectedItem(rs.getString("PROG"));
        prog.setEditable(true);
        addmis.setSelectedItem(rs.getString("ADMISSON"));
        addmis.setEditable(true);
        clg.setSelectedItem(rs.getString("COLLEGE"));
        clg.setEditable(true);
        valid.setSelectedItem(rs.getString("VALID"));
        valid.setEditable(true);
        cont.setText(rs.getString("CONTACT"));
        cont.setEditable(true);
        addrs.setText(rs.getString("RESIDENCE"));
        addrs.setEditable(true);
        blood.setSelectedItem(rs.getString("BLOOD"));
        blood.setEditable(true);
        new main().setTitle("Searched Result for :"+up);
        
         //setting image
         InputStream inP=rs.getBinaryStream("IMAGE");    //this is returning null IN some case
         //System.out.println(inP);
         BufferedImage im=null;
         try
         {
         im=ImageIO.read(inP);
         }
         catch(IOException e)
         {
             System.out.println("Error in reading image from database"+e);
         }
         BufferedImage outimage =new BufferedImage(im.getWidth(),im.getHeight(),BufferedImage.TYPE_INT_RGB);
         Graphics2D g=outimage.createGraphics();
         
         float xScale=(float)im.getWidth()/outimage.getWidth();
         float yScale=(float)im.getHeight()/outimage.getHeight();
         AffineTransform at=AffineTransform.getScaleInstance(xScale,yScale);
         g.drawRenderedImage(im, at);
         g.dispose();
         Image scaledImage=outimage.getScaledInstance(im.getWidth(),im.getHeight(),im.SCALE_SMOOTH);
         ImageIcon icon=new ImageIcon(scaledImage);
         preview.setIcon(icon);
         
         btn.setVisible(false);
         lbl_reg.setVisible(false);
         //btn_sub.setVisible(true);
         btn_cncl.setVisible(true);
         btn_print.setVisible(false);
         sep.setVisible(false);
         btn_upimg.setVisible(true);
         //image set now
         add_mod.setVisible(true);
        }
        else
        {
        JOptionPane.showMessageDialog(null,"NO RECORD FOUND");
        }
      }
      catch(Exception e)
      {
      System.out.println("Error in connection"+e);
      }
     } 
        update_mod.dispose();
    }//GEN-LAST:event_txt_upActionPerformed

    private void txt_printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_printActionPerformed
        String stxt=txt_print.getText();
        if(stxt.isEmpty())
        { JOptionPane.showMessageDialog(null,"Input Required.");
        }
        else
        { System.out.println(name);
        try
        {
        Class.forName("java.sql.Driver");
          Connection conn=(Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/swapnil","root","sj");
         PreparedStatement pstmt =conn.prepareStatement("select * from card where enroll='"+stxt+"'");
        ResultSet rs=pstmt.executeQuery();
        main obj=new main();
        if(rs.next())
        {
        obj.lenrol1.setText(rs.getString("ENROLL"));
        obj.lname1.setText(rs.getString("NAME"));
        obj.lfname1.setText(rs.getString("FNAME"));
        obj.ldob1.setText(rs.getString("DOB"));
        String ss=rs.getString("GENDER");
        if(ss.equals("Male"))
        { obj.lgen1.setText("Male"); }
        if(ss.equals("Female"))
        { obj.lgen1.setText("Female"); }
        if(ss.equals("Others"))
        { obj.lgen1.setText("Others"); }   
        obj.lprog1.setText(rs.getString("PROG"));
        obj.ladd1.setText(rs.getString("ADMISSON"));
        obj.lclg1.setText(rs.getString("COLLEGE"));
        obj.lvalid1.setText(rs.getString("VALID"));
        obj.lcon1.setText(rs.getString("CONTACT"));
        obj.lres1.setText(rs.getString("RESIDENCE"));
        obj.lblod1.setText(rs.getString("BLOOD"));
         InputStream inP=rs.getBinaryStream("IMAGE");    //this is returning null IN some case
         //System.out.println(inP);
         BufferedImage im=null;
         try
         {
         im=ImageIO.read(inP);
         }
         catch(IOException e)
         {
             System.out.println("Error in reading image from database"+e);
         }
         BufferedImage outimage =new BufferedImage(im.getWidth(),im.getHeight(),BufferedImage.TYPE_INT_RGB);
         Graphics2D g=outimage.createGraphics();
         
         float xScale=(float)im.getWidth()/outimage.getWidth();
         float yScale=(float)im.getHeight()/outimage.getHeight();
         AffineTransform at=AffineTransform.getScaleInstance(xScale,yScale);
         g.drawRenderedImage(im, at);
         g.dispose();
         Image scaledImage=outimage.getScaledInstance(im.getWidth(),im.getHeight(),im.SCALE_SMOOTH);
         ImageIcon icon=new ImageIcon(scaledImage);
         obj.lpic1.setIcon(icon);
          obj.frame.setVisible(true);
        }
        else
        {
        JOptionPane.showMessageDialog(null,"NO RECORD FOUND");
        }
      }
      catch(Exception e)
      {
      System.out.println("Error in connection"+e);
      }
     } 
     
      print_mod.dispose();
    }//GEN-LAST:event_txt_printActionPerformed

    private void btn_subActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_subActionPerformed
        
        //new main().setVisible(true);
        
        btn.setVisible(false);
        String nam=name.getText();
        String fnam=fname.getText();
        String dat=(String)date.getSelectedItem();
        String month= (String)mon.getSelectedItem();
        String yr= (String)year.getSelectedItem();
        String dob=dat+"/"+month+"/"+yr;
        String gen;
        { if(rad_male.isSelected()==true)
          { gen="Male";}
          else if(rad_fem.isSelected()==true)
          { gen="Female";}   
          else
           {  gen="Others";}
        }
        String pr=(String)prog.getSelectedItem();
        String addmiss=(String)addmis.getSelectedItem();
        String clgnam=(String)clg.getSelectedItem();
        String val=(String)valid.getSelectedItem();
        String address=addrs.getText();
        String con=cont.getText();
        String blo=(String)blood.getSelectedItem();
        String enr=enrol.getText();
        String pattern="[0-9]*";
        String patt="[a-zA-Z ]*";
        int f=1;
        if(nam.isEmpty())
        {f=0;
        name.setBackground(Color.red);
        
        }
        else if(!nam.matches(patt))
        {f=0;
          JOptionPane.showMessageDialog(null,"Enter the valid name.");
         }
        
        else if(fnam.isEmpty())
        {f=0;
            fname.setBackground(Color.red);
        }
        else if(!fnam.matches(patt))
        { JOptionPane.showMessageDialog(null,"Enter valid fathername."); 
          f=0;
        }

        
        else if(con.isEmpty()||(con.length()!=10)||(!con.matches(pattern)))
        {f=0;
            cont.setBackground(Color.red);
        }
        else if(address.isEmpty())
        {f=0;
        addrs.setBackground(Color.red);
        }
        
        else if(enr.isEmpty()||(enr.length()!=10))
        {f=0;
        enrol.setBackground(Color.red);
        }
        
        else if(dat.equals("Select"))
        {f=0;
            JOptionPane.showMessageDialog(null,"Date field can't leave blank"); 
       
        }
         
        else if(month.equals("Select"))
        { f=0;
            JOptionPane.showMessageDialog(null,"Month field can't leave blank"); 
          
        }
        else if(yr.equals("Select"))
        { f=0;
            JOptionPane.showMessageDialog(null,"Year field can't leave blank"); 
       
        }
        else if((rad_male.isSelected()==false)&&(rad_fem.isSelected()==false)&&(rad_oth.isSelected()==false))
        { f=0;
            JOptionPane.showMessageDialog(null,"Gender field can't leave blank"); 
         }
        else if(pr.equals("Select"))
        { f=0;
         JOptionPane.showMessageDialog(null,"Program field can't leave blank");       
        }
        else if(addmiss.equals("Select"))
        { f=0;
            
             JOptionPane.showMessageDialog(null,"Admission Session field can't leave blank"); 
       
        }
        else if(clgnam.equals("Select"))
        { f=0;
             JOptionPane.showMessageDialog(null,"College field field can't leave blank"); 
       
        }
        else if(val.equals("Select"))
        { f=0;
            JOptionPane.showMessageDialog(null,"Valid field can't leave blank"); 
       
        }
        else if(blo.equals("Select"))
        { f=0;
            JOptionPane.showMessageDialog(null,"Blood field can't leave blank"); 
       
        } 
        else if(i==0)
          { JOptionPane.showMessageDialog(null,"Upload Image");
            f=0;
          } 
       else
        {   try
         { 
              Class.forName("java.sql.Driver");
          Connection conn=(Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/swapnil","root","sj");
          PreparedStatement pstmt=conn.prepareStatement("insert into card values(?,?,?,?,?,?,?,?,?,?,?,?,?)");
          pstmt.setString(1,enr);
          pstmt.setString(2,nam);
          pstmt.setString(3,fnam);
          pstmt.setString(4,dob);
          pstmt.setString(5,gen);
          
          pstmt.setString(6,pr);
          pstmt.setString(7,addmiss);
          pstmt.setString(8,clgnam);
          pstmt.setString(9,val);
          pstmt.setString(10,con);
          pstmt.setString(11,address);
          pstmt.setString(12,blo);       
          InputStream inputStream = new FileInputStream(new File(path));
          pstmt.setBlob(13, inputStream);
          int j=pstmt.executeUpdate();
          if(j>0)
          {   JOptionPane.showMessageDialog(null,"Record Saved");
             btn_sub.setIcon(btn.getIcon());
           }
          else
          {  JOptionPane.showMessageDialog(null,"Record Not Saved"); }    
        }
        
        catch(Exception e)
        {System.out.print(e);}
        add_mod.dispose();
        }  
       
    }//GEN-LAST:event_btn_subActionPerformed

    private void btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActionPerformed
        
    }//GEN-LAST:event_btnActionPerformed

    private void fnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fnameActionPerformed
        
    }//GEN-LAST:event_fnameActionPerformed

    private void btn_cnclActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cnclActionPerformed
        
        add_mod.dispose();
    }//GEN-LAST:event_btn_cnclActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
       String stxt=txt_print.getText();
        if(stxt.isEmpty())
        { JOptionPane.showMessageDialog(null,"Input Required.");
        }
        else
        { System.out.println(name);
        try
        {
        Class.forName("java.sql.Driver");
          Connection conn=(Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/swapnil","root","sj");
         PreparedStatement pstmt =conn.prepareStatement("select * from card where enroll='"+stxt+"'");
        ResultSet rs=pstmt.executeQuery();
        main obj=new main();
        if(rs.next())
        {
        obj.lenrol1.setText(rs.getString("ENROLL"));
        obj.lname1.setText(rs.getString("NAME"));
        obj.lfname1.setText(rs.getString("FNAME"));
        obj.ldob1.setText(rs.getString("DOB"));
        String ss=rs.getString("GENDER");
        if(ss.equals("Male"))
        { obj.lgen1.setText("Male"); }
        if(ss.equals("Female"))
        { obj.lgen1.setText("Female"); }
        if(ss.equals("Others"))
        { obj.lgen1.setText("Others"); }   
        obj.lprog1.setText(rs.getString("PROG"));
        obj.ladd1.setText(rs.getString("ADMISSON"));
        obj.lclg1.setText(rs.getString("COLLEGE"));
        obj.lvalid1.setText(rs.getString("VALID"));
        obj.lcon1.setText(rs.getString("CONTACT"));
        obj.lres1.setText(rs.getString("RESIDENCE"));
        obj.lblod1.setText(rs.getString("BLOOD"));
         InputStream inP=rs.getBinaryStream("IMAGE");    //this is returning null IN some case
         //System.out.println(inP);
         BufferedImage im=null;
         try
         {
         im=ImageIO.read(inP);
         }
         catch(IOException e)
         {
             System.out.println("Error in reading image from database"+e);
         }
         BufferedImage outimage =new BufferedImage(im.getWidth(),im.getHeight(),BufferedImage.TYPE_INT_RGB);
         Graphics2D g=outimage.createGraphics();
         
         float xScale=(float)im.getWidth()/outimage.getWidth();
         float yScale=(float)im.getHeight()/outimage.getHeight();
         AffineTransform at=AffineTransform.getScaleInstance(xScale,yScale);
         g.drawRenderedImage(im, at);
         g.dispose();
         Image scaledImage=outimage.getScaledInstance(im.getWidth(),im.getHeight(),im.SCALE_SMOOTH);
         ImageIcon icon=new ImageIcon(scaledImage);
         obj.lpic1.setIcon(icon);
          obj.frame.setVisible(true);
        }
        else
        {
        JOptionPane.showMessageDialog(null,"NO RECORD FOUND");
        }
      }
      catch(Exception e)
      {
      System.out.println("Error in connection"+e);
      }
     } 
     
      print_mod.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String stxt=txt_srch.getText();
        if(stxt.isEmpty())
        { JOptionPane.showMessageDialog(null,"Input Required.");
        }
        else
        { System.out.println(name);
        try
        {
        Class.forName("java.sql.Driver");
          Connection conn=(Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/swapnil","root","sj");
          
        
        
        PreparedStatement pstmt =conn.prepareStatement("select * from card where enroll='"+stxt+"'");
        ResultSet rs=pstmt.executeQuery();
        if(rs.next())
        {
        enrol.setText(rs.getString("ENROLL"));
        enrol.setEditable(false);
        name.setText(rs.getString("NAME"));
        name.setEditable(false);
        fname.setText(rs.getString("FNAME"));
        fname.setEditable(false);
        String dateinter=rs.getString("DOB");
        String dd=dateinter.substring(0,2);
        String mm=dateinter.substring(3,6);
        String yy=dateinter.substring(7,11);
        date.setSelectedItem(dd);
        mon.setSelectedItem(mm);
        year.setSelectedItem(yy); 
        String ss=rs.getString("GENDER");
        System.out.print(ss);
        if(ss.equals("Male"))
        { rad_male.setSelected(true); }
        if(ss.equals("Female"))
        { rad_fem.setSelected(true); }
        if(ss.equals("Others"))
        { rad_oth.setSelected(true); }   
        prog.setSelectedItem(rs.getString("PROG"));
        prog.setEditable(false);
        addmis.setSelectedItem(rs.getString("ADMISSON"));
        addmis.setEditable(false);
        clg.setSelectedItem(rs.getString("COLLEGE"));
        clg.setEditable(false);
        valid.setSelectedItem(rs.getString("VALID"));
        valid.setEditable(false);
        cont.setText(rs.getString("CONTACT"));
        cont.setEditable(false);
        addrs.setText(rs.getString("RESIDENCE"));
        addrs.setEditable(false);
        blood.setSelectedItem(rs.getString("BLOOD"));
        blood.setEditable(false);
        new main().setTitle("Searched Result for :"+stxt);
        
         //setting image
         InputStream inP=rs.getBinaryStream("IMAGE");    //this is returning null IN some case
         //System.out.println(inP);
         BufferedImage im=null;
         try
         {
         im=ImageIO.read(inP);
         }
         catch(IOException e)
         {
             System.out.println("Error in reading image from database"+e);
         }
         BufferedImage outimage =new BufferedImage(im.getWidth(),im.getHeight(),BufferedImage.TYPE_INT_RGB);
         Graphics2D g=outimage.createGraphics();
         
         float xScale=(float)im.getWidth()/outimage.getWidth();
         float yScale=(float)im.getHeight()/outimage.getHeight();
         AffineTransform at=AffineTransform.getScaleInstance(xScale,yScale);
         g.drawRenderedImage(im, at);
         g.dispose();
         Image scaledImage=outimage.getScaledInstance(im.getWidth(),im.getHeight(),im.SCALE_SMOOTH);
         ImageIcon icon=new ImageIcon(scaledImage);
         preview.setIcon(icon);
         
         btn.setVisible(false);
         lbl_reg.setVisible(false);
         btn_sub.setVisible(false);
         btn_cncl.setText("Back");
         btn_cncl.setVisible(true);
         btn_print.setVisible(false);
         sep.setVisible(false);
         btn_up.setVisible(false);
         btn_upimg.setVisible(false);
         //image set now
         add_mod.setVisible(true);
        }
        else
        {
        JOptionPane.showMessageDialog(null,"NO RECORD FOUND");
        }
      }
      catch(Exception e)
      {
      System.out.println("Error in connection"+e);
      }
     }       
        search_mod.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void contFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_contFocusGained
      cont.setBackground(Color.white);       
    }//GEN-LAST:event_contFocusGained

    private void contFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_contFocusLost
        
    }//GEN-LAST:event_contFocusLost

    private void contActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contActionPerformed

    }//GEN-LAST:event_contActionPerformed

    private void btn_upimgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_upimgActionPerformed
     i=1;
      new main().setVisible(false);
     JFileChooser choose =new JFileChooser();
    choose.setFileSelectionMode(JFileChooser.FILES_ONLY);
    int result=choose.showDialog(this,"Open/Save");
    File file=choose.getSelectedFile();
    path=file.getAbsolutePath();
    preview.setIcon(new ImageIcon(path));
    path1=path;
     
    }//GEN-LAST:event_btn_upimgActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
      String del=txt_del.getText();
      if(del.isEmpty())
{
JOptionPane.showMessageDialog(null,"Input Required");
}
else
{
System.out.println(del);
try
        {
       Class.forName("java.sql.Driver");
          Connection conn=(Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/swapnil","root","sj");
        PreparedStatement pstmt =conn.prepareStatement("delete  from card where enroll='"+del+"'");
        int t=pstmt.executeUpdate();
        if(t>0)
        {
        JOptionPane.showMessageDialog(null,"Success Record Deleted ! ");
        }
       else
        {
        JOptionPane.showMessageDialog(null,"Record not found.");
        }
        
        }
catch(Exception e)
{ System.out.println("Error:In connection "+e);}
}    
      delete_mod.dispose();
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
        btn_sub.setVisible(false);
        String up=txt_up.getText();
        if(up.isEmpty())
        { JOptionPane.showMessageDialog(null,"Input Required.");
        }
        else
        { System.out.println(name);
        try
        {
        Class.forName("java.sql.Driver");
          Connection conn=(Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/swapnil","root","sj");
          
        
        
        PreparedStatement pstmt =conn.prepareStatement("select * from card where enroll='"+up+"'");
        ResultSet rs=pstmt.executeQuery();
        if(rs.next())
        {
        enrol.setText(rs.getString("ENROLL"));
        enrol.setEditable(true);
        name.setText(rs.getString("NAME"));
        name.setEditable(true);
        fname.setText(rs.getString("FNAME"));
        fname.setEditable(true);
        String dateinter=rs.getString("DOB");
        String dd=dateinter.substring(0,2);
        String mm=dateinter.substring(3,6);
        String yy=dateinter.substring(7,11);
        date.setSelectedItem(dd);
        mon.setSelectedItem(mm);
        year.setSelectedItem(yy); 
        String ss=rs.getString("GENDER");
        System.out.print(ss);
        if(ss.equals("Male"))
        { rad_male.setSelected(true); }
        if(ss.equals("Female"))
        { rad_fem.setSelected(true); }
        if(ss.equals("Others"))
        { rad_oth.setSelected(true); }   
        prog.setSelectedItem(rs.getString("PROG"));
        prog.setEditable(true);
        addmis.setSelectedItem(rs.getString("ADMISSON"));
        addmis.setEditable(true);
        clg.setSelectedItem(rs.getString("COLLEGE"));
        clg.setEditable(true);
        valid.setSelectedItem(rs.getString("VALID"));
        valid.setEditable(true);
        cont.setText(rs.getString("CONTACT"));
        cont.setEditable(true);
        addrs.setText(rs.getString("RESIDENCE"));
        addrs.setEditable(true);
        blood.setSelectedItem(rs.getString("BLOOD"));
        blood.setEditable(true);
        new main().setTitle("Searched Result for :"+up);
        
         //setting image
         InputStream inP=rs.getBinaryStream("IMAGE");    //this is returning null IN some case
         //System.out.println(inP);
         BufferedImage im=null;
         try
         {
         im=ImageIO.read(inP);
         }
         catch(IOException e)
         {
             System.out.println("Error in reading image from database"+e);
         }
         BufferedImage outimage =new BufferedImage(im.getWidth(),im.getHeight(),BufferedImage.TYPE_INT_RGB);
         Graphics2D g=outimage.createGraphics();
         
         float xScale=(float)im.getWidth()/outimage.getWidth();
         float yScale=(float)im.getHeight()/outimage.getHeight();
         AffineTransform at=AffineTransform.getScaleInstance(xScale,yScale);
         g.drawRenderedImage(im, at);
         g.dispose();
         Image scaledImage=outimage.getScaledInstance(im.getWidth(),im.getHeight(),im.SCALE_SMOOTH);
         ImageIcon icon=new ImageIcon(scaledImage);
         preview.setIcon(icon);
         
         btn.setVisible(false);
         lbl_reg.setVisible(false);
         //btn_sub.setVisible(true);
         btn_cncl.setVisible(true);
         btn_print.setVisible(false);
         sep.setVisible(false);
         btn_upimg.setVisible(true);
         //image set now
         add_mod.setVisible(true);
        }
        else
        {
        JOptionPane.showMessageDialog(null,"NO RECORD FOUND");
        }
      }
      catch(Exception e)
      {
      System.out.println("Error in connection"+e);
      }
     }
     update_mod.dispose();
    }//GEN-LAST:event_jButton12ActionPerformed

    private void btn_upActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_upActionPerformed
        // TODO add your handling code here:
        String up=txt_up.getText(); 
        String nam=name.getText();
        String fnam=fname.getText();
        String dat=(String)date.getSelectedItem();
        String month= (String)mon.getSelectedItem();
        String yr= (String)year.getSelectedItem();
        String dob=dat+"/"+month+"/"+yr;
        String gen;
        { if(rad_male.isSelected()==true)
          { gen="Male";}
          else if(rad_fem.isSelected()==true)
          { gen="Female";}   
          else
           {  gen="Others";}
        }
        String pr=(String)prog.getSelectedItem();
        String addmiss=(String)addmis.getSelectedItem();
        String clgnam=(String)clg.getSelectedItem();
        String val=(String)valid.getSelectedItem();
        String address=addrs.getText();
        String con=cont.getText();
        String blo=(String)blood.getSelectedItem();
        String enr=enrol.getText();
        try
        {
          Class.forName("java.sql.Driver");
          Connection conn=(Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/swapnil","root","sj");
          PreparedStatement pstmt=conn.prepareStatement("update card set ENROLL=?,NAME=?,FNAME=?,DOB=?,GENDER=?,PROG=?,ADMISSON=?,COLLEGE=?,VALID=?,CONTACT=?,RESIDENCE=?,BLOOD=?,IMAGE=? where ENROLL='"+up+"'");
          pstmt.setString(1,enr);
          pstmt.setString(2,nam);
          pstmt.setString(3,fnam);
          pstmt.setString(4,dob);
          pstmt.setString(5,gen);
          pstmt.setString(6,pr);
          pstmt.setString(7,addmiss);
          pstmt.setString(8,clgnam);
          pstmt.setString(9,val);
          pstmt.setString(10,con);
          pstmt.setString(11,address);
          pstmt.setString(12,blo);
          if(i==0)
        {
        JOptionPane.showMessageDialog(null,"PLEASE UPLOAD IMAGE");
        }
        else
        {
        InputStream inputStream = new FileInputStream(new File(path));
        pstmt.setBlob(13,inputStream);
        }
        int i=pstmt.executeUpdate();
        
        if(i>0)
        {
        JOptionPane.showMessageDialog(null,"Record Updated Successfully \n");
        }
        else
        {
        JOptionPane.showMessageDialog(null,"Record Not Updated  \n");
        
         }
        }
        catch(Exception e)
        {
        System.out.print(e);
        }
         
    }//GEN-LAST:event_btn_upActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
        update_mod.dispose();
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        print_mod.dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        search_mod.dispose(); 
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        delete_mod.dispose();
    }//GEN-LAST:event_jButton11ActionPerformed

    private void btn_printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_printActionPerformed
        // TODO add your handling code here:
        String txt=txt_print.getText();
        PrinterJob job=PrinterJob.getPrinterJob();
if(job.printDialog())
{
try
{
job.print();
}
catch(Exception e)
{
System.out.println("Error can't print .. internal connection error");
}
}
    }//GEN-LAST:event_btn_printActionPerformed

    private void addrsFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_addrsFocusGained
        // TODO add your handling code here:
         addrs.setBackground(Color.white); 
    }//GEN-LAST:event_addrsFocusGained

    private void enrolFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_enrolFocusGained
        // TODO add your handling code here:
         enrol.setBackground(Color.white); 
    }//GEN-LAST:event_enrolFocusGained

    private void progMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_progMousePressed
prog.setForeground(Color.black);       // TODO add your handling code here:
    }//GEN-LAST:event_progMousePressed

    private void prActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prActionPerformed
        // TODO add your handling code here:
      new main().frame.setVisible(false);
        Toolkit tkp=pan.getToolkit();
    PrintJob pjp=tkp.getPrintJob(this,null, null);
    Graphics g=pjp.getGraphics();
    pan.print(g);
    g.dispose();
    pjp.end();
  
    }//GEN-LAST:event_prActionPerformed

    private void prMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_prMousePressed
  new main().pr.setVisible(false);        // TODO add your handling code here:
    }//GEN-LAST:event_prMousePressed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                
                new main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JDialog add_mod;
    private javax.swing.JComboBox<String> addmis;
    private javax.swing.JTextArea addrs;
    private javax.swing.JComboBox<String> blood;
    private javax.swing.JButton btn;
    private javax.swing.JButton btn_cncl;
    private javax.swing.JButton btn_print;
    private javax.swing.JButton btn_sub;
    private javax.swing.JButton btn_up;
    private javax.swing.JButton btn_upimg;
    private javax.swing.JComboBox<String> clg;
    private javax.swing.JTextField cont;
    private javax.swing.JComboBox<String> date;
    private javax.swing.JButton delete;
    private javax.swing.JDialog delete_mod;
    private javax.swing.JTextField enrol;
    private javax.swing.JTextField fname;
    private javax.swing.JFrame frame;
    private javax.swing.ButtonGroup gender_grp;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel74;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel76;
    private javax.swing.JLabel jLabel77;
    private javax.swing.JLabel jLabel78;
    private javax.swing.JLabel jLabel79;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JLabel ladd1;
    private javax.swing.JLabel lbl_reg;
    private javax.swing.JLabel lblod1;
    private javax.swing.JLabel lclg1;
    private javax.swing.JLabel lcon1;
    private javax.swing.JLabel ldob1;
    private javax.swing.JLabel lenrol1;
    private javax.swing.JLabel lfname1;
    private javax.swing.JLabel lgen1;
    private javax.swing.JLabel lname1;
    private javax.swing.JLabel lpic1;
    private javax.swing.JLabel lprog1;
    private javax.swing.JLabel lres1;
    private javax.swing.JLabel lvalid1;
    private javax.swing.JComboBox<String> mon;
    private javax.swing.JTextField name;
    private javax.swing.JPanel pan;
    private javax.swing.JButton pr;
    private javax.swing.JLabel preview;
    private javax.swing.JButton print;
    private javax.swing.JDialog print_mod;
    private javax.swing.JComboBox<String> prog;
    private javax.swing.JRadioButton rad_fem;
    private javax.swing.JRadioButton rad_male;
    private javax.swing.JRadioButton rad_oth;
    private javax.swing.JDialog search_mod;
    private javax.swing.JSeparator sep;
    private javax.swing.JButton srch;
    private javax.swing.JButton submit;
    private javax.swing.JTextField txt_del;
    private javax.swing.JTextField txt_print;
    private javax.swing.JTextField txt_srch;
    private javax.swing.JTextField txt_up;
    private javax.swing.JButton update;
    private javax.swing.JDialog update_mod;
    private javax.swing.JComboBox<String> valid;
    private javax.swing.JComboBox<String> year;
    // End of variables declaration//GEN-END:variables
}
