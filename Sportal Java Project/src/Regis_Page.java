
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author KINSHUK
 */
public class Regis_Page extends javax.swing.JFrame {

    /**
     * Creates new form Login_Page
     */
    int i;
    String path, path1;
    int f = 1, fee = 0, flag = 1;
    String a[] = new String[15];
    String g1 = null, g2 = null, g3 = null;

    public Regis_Page() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txt_name = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txt_email = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        com_course = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        com_year = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txt_mobile = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        shotput = new javax.swing.JCheckBox();
        cricket = new javax.swing.JCheckBox();
        football = new javax.swing.JCheckBox();
        volley = new javax.swing.JCheckBox();
        basket = new javax.swing.JCheckBox();
        tt = new javax.swing.JCheckBox();
        chess = new javax.swing.JCheckBox();
        carrom = new javax.swing.JCheckBox();
        tug = new javax.swing.JCheckBox();
        badminton = new javax.swing.JCheckBox();
        kabaddi = new javax.swing.JCheckBox();
        race100 = new javax.swing.JCheckBox();
        squash = new javax.swing.JCheckBox();
        race200 = new javax.swing.JCheckBox();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        btn_submit = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        com_gender = new javax.swing.JComboBox<>();
        com_fee = new javax.swing.JComboBox<>();
        jLabel19 = new javax.swing.JLabel();
        com_section = new javax.swing.JComboBox<>();
        jLabel20 = new javax.swing.JLabel();
        txt_fname = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        txt_enroll = new javax.swing.JTextField();
        btn_update = new javax.swing.JButton();
        com_paymode = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        hidd = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Registration");
        setMinimumSize(new java.awt.Dimension(976, 632));
        getContentPane().setLayout(null);

        jLabel2.setBackground(new java.awt.Color(0, 51, 51));
        jLabel2.setFont(new java.awt.Font("Cupertino", 0, 20)); // NOI18N
        jLabel2.setText("TEERTHANKER MAHAVEER UNIVERSITY, MORADABAD");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(190, 50, 600, 30);

        jLabel1.setBackground(new java.awt.Color(153, 153, 153));
        jLabel1.setFont(new java.awt.Font("Motor", 0, 36)); // NOI18N
        jLabel1.setText("COLLEGE OF COMPUTING SCIENCE AND INFORMATION TECHNOLOGY");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(70, 12, 860, 40);

        jLabel3.setBackground(new java.awt.Color(0, 51, 51));
        jLabel3.setFont(new java.awt.Font("Cupertino", 0, 18)); // NOI18N
        jLabel3.setText("COLLEGE  SPORTS  MEET");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(370, 80, 260, 30);

        jLabel4.setBackground(new java.awt.Color(0, 102, 102));
        jLabel4.setFont(new java.awt.Font("Subway", 0, 17)); // NOI18N
        jLabel4.setText("REGISTRATION FORM");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(380, 110, 232, 40);

        jLabel5.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 51));
        jLabel5.setText("Student Name  :");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(340, 170, 110, 30);
        getContentPane().add(txt_name);
        txt_name.setBounds(455, 170, 150, 28);

        jLabel6.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 51));
        jLabel6.setText("Father Name    :");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(340, 210, 110, 30);

        txt_email.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_emailActionPerformed(evt);
            }
        });
        getContentPane().add(txt_email);
        txt_email.setBounds(158, 210, 170, 28);

        jLabel7.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 51));
        jLabel7.setText("Email                 :");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(40, 210, 120, 30);

        com_course.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "B.Tech(CSE)", "B.Tech(i-Nurture)", "B.Tech(IBM)", "BSc(CS)", "BCA", "MCA", "ICA", "BSc(Animation)", "M.Tech", "BCA(i-Nurture)" }));
        com_course.setVerifyInputWhenFocusTarget(false);
        com_course.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                com_courseActionPerformed(evt);
            }
        });
        getContentPane().add(com_course);
        com_course.setBounds(158, 250, 170, 30);

        jLabel8.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 51));
        jLabel8.setText("Year :");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(475, 250, 40, 30);

        com_year.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "1", "2", "3", "4" }));
        getContentPane().add(com_year);
        com_year.setBounds(515, 250, 70, 30);

        jLabel10.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 51));
        jLabel10.setText("Section :");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(340, 250, 80, 30);

        jLabel11.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 51));
        jLabel11.setText("Mobile No   :");
        getContentPane().add(jLabel11);
        jLabel11.setBounds(620, 170, 80, 30);

        jLabel12.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 0, 51));
        jLabel12.setText("+91");
        getContentPane().add(jLabel12);
        jLabel12.setBounds(710, 170, 24, 30);
        getContentPane().add(txt_mobile);
        txt_mobile.setBounds(740, 170, 150, 28);

        jLabel13.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        jLabel13.setText("Registration fee  is 100Rs. for Cricket.");
        getContentPane().add(jLabel13);
        jLabel13.setBounds(53, 510, 410, 30);

        shotput.setBackground(new java.awt.Color(204, 204, 204));
        shotput.setFont(new java.awt.Font("Bell MT", 1, 16)); // NOI18N
        shotput.setForeground(new java.awt.Color(0, 51, 51));
        shotput.setText("14. Shot put. (For boys only)");
        shotput.setOpaque(false);
        getContentPane().add(shotput);
        shotput.setBounds(640, 350, 260, 40);

        cricket.setBackground(new java.awt.Color(204, 204, 204));
        cricket.setFont(new java.awt.Font("Bell MT", 1, 16)); // NOI18N
        cricket.setForeground(new java.awt.Color(0, 51, 51));
        cricket.setText("1. Cricket");
        cricket.setOpaque(false);
        cricket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cricketActionPerformed(evt);
            }
        });
        getContentPane().add(cricket);
        cricket.setBounds(50, 320, 160, 40);

        football.setBackground(new java.awt.Color(204, 204, 204));
        football.setFont(new java.awt.Font("Bell MT", 1, 16)); // NOI18N
        football.setForeground(new java.awt.Color(0, 51, 51));
        football.setText("2. FootBall");
        football.setOpaque(false);
        getContentPane().add(football);
        football.setBounds(50, 350, 160, 40);

        volley.setBackground(new java.awt.Color(204, 204, 204));
        volley.setFont(new java.awt.Font("Bell MT", 1, 16)); // NOI18N
        volley.setForeground(new java.awt.Color(0, 51, 51));
        volley.setText("3. VolleyBall");
        volley.setOpaque(false);
        getContentPane().add(volley);
        volley.setBounds(50, 380, 160, 40);

        basket.setBackground(new java.awt.Color(204, 204, 204));
        basket.setFont(new java.awt.Font("Bell MT", 1, 16)); // NOI18N
        basket.setForeground(new java.awt.Color(0, 51, 51));
        basket.setText("4. BasketBall");
        basket.setOpaque(false);
        getContentPane().add(basket);
        basket.setBounds(50, 410, 160, 40);

        tt.setBackground(new java.awt.Color(204, 204, 204));
        tt.setFont(new java.awt.Font("Bell MT", 1, 16)); // NOI18N
        tt.setForeground(new java.awt.Color(0, 51, 51));
        tt.setText("5. Table Tennis");
        tt.setOpaque(false);
        getContentPane().add(tt);
        tt.setBounds(240, 320, 160, 40);

        chess.setBackground(new java.awt.Color(204, 204, 204));
        chess.setFont(new java.awt.Font("Bell MT", 1, 16)); // NOI18N
        chess.setForeground(new java.awt.Color(0, 51, 51));
        chess.setText("6. Chess");
        chess.setOpaque(false);
        getContentPane().add(chess);
        chess.setBounds(240, 350, 160, 40);

        carrom.setBackground(new java.awt.Color(204, 204, 204));
        carrom.setFont(new java.awt.Font("Bell MT", 1, 16)); // NOI18N
        carrom.setForeground(new java.awt.Color(0, 51, 51));
        carrom.setText("7. Carrom");
        carrom.setOpaque(false);
        getContentPane().add(carrom);
        carrom.setBounds(240, 380, 160, 40);

        tug.setBackground(new java.awt.Color(204, 255, 204));
        tug.setFont(new java.awt.Font("Bell MT", 1, 16)); // NOI18N
        tug.setForeground(new java.awt.Color(0, 51, 51));
        tug.setText("8. Tug Of War");
        tug.setOpaque(false);
        getContentPane().add(tug);
        tug.setBounds(240, 410, 160, 40);

        badminton.setBackground(new java.awt.Color(204, 204, 204));
        badminton.setFont(new java.awt.Font("Bell MT", 1, 16)); // NOI18N
        badminton.setForeground(new java.awt.Color(0, 51, 51));
        badminton.setText("9. Badminton");
        badminton.setOpaque(false);
        getContentPane().add(badminton);
        badminton.setBounds(450, 320, 160, 40);

        kabaddi.setBackground(new java.awt.Color(204, 204, 204));
        kabaddi.setFont(new java.awt.Font("Bell MT", 1, 16)); // NOI18N
        kabaddi.setForeground(new java.awt.Color(0, 51, 51));
        kabaddi.setText("10. Kabaddi");
        kabaddi.setOpaque(false);
        getContentPane().add(kabaddi);
        kabaddi.setBounds(450, 350, 160, 40);

        race100.setBackground(new java.awt.Color(204, 204, 204));
        race100.setFont(new java.awt.Font("Bell MT", 1, 16)); // NOI18N
        race100.setForeground(new java.awt.Color(0, 51, 51));
        race100.setText("11. 100m");
        race100.setOpaque(false);
        getContentPane().add(race100);
        race100.setBounds(450, 380, 160, 40);

        squash.setBackground(new java.awt.Color(204, 204, 204));
        squash.setFont(new java.awt.Font("Bell MT", 1, 16)); // NOI18N
        squash.setForeground(new java.awt.Color(0, 51, 51));
        squash.setText("12. Squash");
        squash.setOpaque(false);
        getContentPane().add(squash);
        squash.setBounds(440, 410, 160, 40);

        race200.setBackground(new java.awt.Color(204, 204, 204));
        race200.setFont(new java.awt.Font("Bell MT", 1, 16)); // NOI18N
        race200.setForeground(new java.awt.Color(0, 51, 51));
        race200.setText("13. 200m. (For boys only)");
        race200.setOpaque(false);
        getContentPane().add(race200);
        race200.setBounds(640, 320, 230, 40);

        jLabel14.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel14.setText("Events List: (Please tick the participating event(s))");
        getContentPane().add(jLabel14);
        jLabel14.setBounds(40, 290, 370, 30);

        jLabel15.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        jLabel15.setText("1. A Student can participate in maximum three (3) events.");
        getContentPane().add(jLabel15);
        jLabel15.setBounds(40, 450, 700, 30);

        jLabel16.setBackground(new java.awt.Color(204, 204, 204));
        jLabel16.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        jLabel16.setText("2. Registration fee is  50Rs. for each event (except cricket).");
        getContentPane().add(jLabel16);
        jLabel16.setBounds(40, 480, 400, 30);

        jButton1.setBackground(new java.awt.Color(0, 0, 51));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Back");
        jButton1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jButton1.setBorderPainted(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(490, 540, 100, 30);

        btn_submit.setBackground(new java.awt.Color(0, 0, 51));
        btn_submit.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btn_submit.setForeground(new java.awt.Color(255, 255, 255));
        btn_submit.setText("Submit");
        btn_submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_submitActionPerformed(evt);
            }
        });
        getContentPane().add(btn_submit);
        btn_submit.setBounds(360, 540, 100, 30);

        jLabel18.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(0, 0, 51));
        jLabel18.setText("Gender       :");
        getContentPane().add(jLabel18);
        jLabel18.setBounds(620, 210, 100, 30);

        com_gender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Male", "Female" }));
        com_gender.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                com_genderFocusLost(evt);
            }
        });
        com_gender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                com_genderActionPerformed(evt);
            }
        });
        getContentPane().add(com_gender);
        com_gender.setBounds(710, 210, 180, 30);

        com_fee.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Paid", "Unpaid" }));
        getContentPane().add(com_fee);
        com_fee.setBounds(635, 250, 70, 30);

        jLabel19.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(0, 0, 51));
        jLabel19.setText("Fees :");
        getContentPane().add(jLabel19);
        jLabel19.setBounds(590, 250, 50, 30);

        com_section.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "None", "A", "B", "C", "D", "E" }));
        com_section.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                com_sectionActionPerformed(evt);
            }
        });
        getContentPane().add(com_section);
        com_section.setBounds(400, 250, 70, 30);

        jLabel20.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(0, 0, 51));
        jLabel20.setText("Course               :");
        getContentPane().add(jLabel20);
        jLabel20.setBounds(40, 250, 120, 30);

        txt_fname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_fnameActionPerformed(evt);
            }
        });
        getContentPane().add(txt_fname);
        txt_fname.setBounds(455, 210, 150, 28);

        jLabel21.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(0, 0, 51));
        jLabel21.setText("Enrollment No. :");
        getContentPane().add(jLabel21);
        jLabel21.setBounds(40, 170, 130, 30);

        txt_enroll.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_enrollFocusLost(evt);
            }
        });
        txt_enroll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_enrollActionPerformed(evt);
            }
        });
        getContentPane().add(txt_enroll);
        txt_enroll.setBounds(158, 174, 170, 28);

        btn_update.setBackground(new java.awt.Color(0, 0, 51));
        btn_update.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btn_update.setForeground(new java.awt.Color(255, 255, 255));
        btn_update.setText("Update");
        btn_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_updateActionPerformed(evt);
            }
        });
        getContentPane().add(btn_update);
        btn_update.setBounds(300, 540, 100, 30);

        com_paymode.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Cash", "Paytm" }));
        getContentPane().add(com_paymode);
        com_paymode.setBounds(820, 250, 70, 30);

        jLabel9.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel9.setText("Payment Mode :");
        getContentPane().add(jLabel9);
        jLabel9.setBounds(710, 250, 110, 30);

        jLabel17.setBackground(new java.awt.Color(204, 204, 204));
        jLabel17.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jLabel17.setOpaque(true);
        getContentPane().add(jLabel17);
        jLabel17.setBounds(0, 0, 960, 590);

        hidd.setText("jLabel9");
        getContentPane().add(hidd);
        hidd.setBounds(50, 120, 90, 30);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();
        new Menu_Page().setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void com_genderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_com_genderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_com_genderActionPerformed

    private void btn_submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_submitActionPerformed
        //new Cnfrm_page().setVisible(true);
        String enroll = txt_enroll.getText();
        String name = txt_name.getText();
        String fname = txt_fname.getText();
        String mobile = txt_mobile.getText();
        String email = txt_email.getText();
        String gender = (String) com_gender.getSelectedItem();
        String fee_status = (String) com_fee.getSelectedItem();
        String course = (String) com_course.getSelectedItem();
        String sec = (String) com_section.getSelectedItem();
        String year = (String) com_year.getSelectedItem();
        String paymode=(String) com_paymode.getSelectedItem();
        String pat = "[A-Za-z .]*";
        String patt = "[A-Z0-9]";
        String patnum = "[0-9]*";
        int cnt = 0;
        if (enroll.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Enrollment field can't leave blank");
            f = 1;
        }
        if (enroll.length() != 10) {
            JOptionPane.showMessageDialog(null, "Enter valid Enrollment");
            f = 1;
        }
        /*if(!enroll.matches(patt))
        { JOptionPane.showMessageDialog(null,"Enter valid Enrollment"); 
          f=1;
        }*/

        if (name.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Name field can't leave blank");
            f = 1;
        }
        if (fname.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Father Name field can't leave blank");
            f = 1;
        }
        if (!name.matches(pat)) {
            JOptionPane.showMessageDialog(null, "Enter valid Name");
            f = 1;
        }
        if (!fname.matches(pat)) {
            JOptionPane.showMessageDialog(null, "Enter valid Father Name");
            f = 1;
        }
        if (mobile.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Mobile field can't leave blank");
            f = 1;
        }

        if (!mobile.matches(patnum) || mobile.length() != 10) {
            JOptionPane.showMessageDialog(null, "Enter valid Mobile");
            f = 1;
        }
        if (!email.matches("^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@" + "[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$")) {
            JOptionPane.showMessageDialog(null, "Enter valid email.");
            f = 1;
        }
        if (gender.equals("Select")) {
            JOptionPane.showMessageDialog(null, "Gender field can't leave blank");
            f = 1;
        }
        if (fee_status.equals("Select")) {
            JOptionPane.showMessageDialog(null, "Fees field can't leave blank");
            f = 1;
        }
        if (course.equals("Select")) {
            JOptionPane.showMessageDialog(null, "Course field can't leave blank");
            f = 1;
        }
        if (year.equals("Select")) {
            JOptionPane.showMessageDialog(null, "Year field can't leave blank");
            f = 1;
        }
        if (sec.equals("Select")) {
            JOptionPane.showMessageDialog(null, "Section field can't leave blank");
            f = 1;
        }
        //////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////////////==============Games Selection==========================///////
        //////////////////////////////////////////////////////////////////////////////////////////////////////////
        if (cricket.isSelected() == true) {
            cnt++;
        }
        if (football.isSelected() == true) {
            cnt++;
        }

        if (volley.isSelected() == true) {
            cnt++;
        }

        if (basket.isSelected() == true) {
            cnt++;

        }

        if (tt.isSelected() == true) {
            cnt++;

        }

        if (chess.isSelected() == true) {
            cnt++;
        }

        if (carrom.isSelected() == true) {
            cnt++;

        }

        if (tug.isSelected() == true) {
            cnt++;
        }

        if (badminton.isSelected() == true) {
            cnt++;
        }
        if (kabaddi.isSelected() == true) {
            cnt++;

        }
        if (race100.isSelected() == true) {
            cnt++;
        }

        if (squash.isSelected() == true) {
            cnt++;
        }

        if (race200.isSelected() == true) {
            cnt++;
        }

        if (shotput.isSelected() == true) {
            cnt++;
        }
        System.out.println("Total fees:" + fee + "Total Games:" + cnt + "\n");

        //for(int i=0;i<14;i++)
        //{System.out.println(a[i]);}
        if (f == 1 && flag == 1) {
            JOptionPane.showMessageDialog(null, "Student already Registered.");
        } else if (f == 1) {
            JOptionPane.showMessageDialog(null, "Please fill the form.");
        } else if (cnt > 3) {
            JOptionPane.showMessageDialog(null, "Select only 3 events to participate.");
        } else if (cnt < 1) {
            JOptionPane.showMessageDialog(null, "Select atleast 1 events to participate.");
        } else {
            if (cricket.isSelected() == true) {
                a[0] = "Cricket";
                if (fee == 0) {
                    fee = 50;
                } else {
                    fee += 50;
                }
            }
            if (football.isSelected() == true) {
                a[1] = "Football";
                if (fee == 0) {
                    fee = 50;
                } else {
                    fee += 50;
                }

            }
            if (volley.isSelected() == true) {
                a[2] = "Volley Ball";
                if (fee == 0) {
                    fee = 50;
                } else {
                    fee += 50;
                }

            }
            if (basket.isSelected() == true) {
                a[3] = "Basket Ball";
                if (fee == 0) {
                    fee = 50;
                } else {
                    fee += 50;
                }

            }
            if (tt.isSelected() == true) {
                a[4] = "Table Tennis";
                if (fee == 0) {
                    fee = 50;
                } else {
                    fee += 50;
                }

            }
            if (chess.isSelected() == true) {
                a[5] = "Chess";
                if (fee == 0) {
                    fee = 50;
                } else {
                    fee += 50;
                }

            }
            if (carrom.isSelected() == true) {
                a[6] = "Carrom";
                if (fee == 0) {
                    fee = 50;
                } else {
                    fee += 50;
                }

            }
            if (tug.isSelected() == true) {
                a[7] = "Tug Of War";
                if (fee == 0) {
                    fee = 50;
                } else {
                    fee += 50;
                }

            }
            if (badminton.isSelected() == true) {
                a[8] = "Badminton";
                if (fee == 0) {
                    fee = 50;
                } else {
                    fee += 50;
                }

            }
            if (kabaddi.isSelected() == true) {
                a[9] = "Kabaddi";
                if (fee == 0) {
                    fee = 50;
                } else {
                    fee += 50;
                }

            }
            if (race100.isSelected() == true) {
                a[10] = "Race 100m";
                if (fee == 0) {
                    fee = 50;
                } else {
                    fee += 50;
                }

            }
            if (squash.isSelected() == true) {
                a[11] = "Squash";
                if (fee == 0) {
                    fee = 50;
                } else {
                    fee += 50;
                }
            }
            if (race200.isSelected() == true) {
                a[12] = "Race 200m";
                if (fee == 0) {
                    fee = 50;
                } else {
                    fee += 50;
                }

            }

            if (shotput.isSelected() == true) {
                a[13] = "Shotput";
                if (fee == 0) {
                    fee = 50;
                } else {
                    fee += 50;
                }

            }

            if (cnt == 1) {
                for (int i = 0; i < 14; i++) {
                    if (a[i] != null) {
                        g1 = a[i];
                    }
                }
                g2 = "None";
                g3 = "None";
                System.out.println("Selected Game 1:" + g1 + "\nSelected Game 2:" + g2 + "\nSelected Game 3:" + g3);
            }
            if (cnt == 2) {
                for (int i = 0; i < 14; i++) {
                    if (a[i] != null) {
                        g1 = a[i];
                        a[i] = null;
                        break;
                    }
                }
                for (int i = 0; i < 14; i++) {
                    if (a[i] != null) {
                        g2 = a[i];
                        a[i] = null;
                        break;
                    }
                }
                g3 = "None";
                //System.out.println("Selected Game 1:"+g1+"\nSelected Game 2:"+g2+"\nSelected Game 3:"+g3);
                // for(int i=0;i<14;i++)
                // {System.out.println(a[i]);}
            }

            if (cnt == 3) {
                for (int i = 0; i < 14; i++) {
                    if (a[i] != null) {
                        g1 = a[i];
                        a[i] = null;
                        break;
                    }
                }
                for (int i = 0; i < 14; i++) {
                    if (a[i] != null) {
                        g2 = a[i];
                        a[i] = null;
                        break;
                    }
                }
                for (int i = 0; i < 14; i++) {
                    if (a[i] != null) {
                        g3 = a[i];
                        a[i] = null;
                        break;
                    }
                }
                System.out.println("Selected Game 1:" + g1 + "\nSelected Game 2:" + g2 + "\nSelected Game 3:" + g3);
            }

            Final_submit ob = new Final_submit();
            ob.lbl_name.setText(name);
            ob.lbl_fname.setText(fname);
            ob.lbl_course.setText(course);
            ob.lbl_email.setText(email);
            ob.lbl_gender.setText(gender);
            ob.lbl_mob.setText(mobile);
            ob.lbl_sec.setText(sec);
            ob.lbl_year.setText(year);
            ob.lbl_enroll.setText(enroll);
            ob.lbl_fee.setText("" + fee);
            ob.lbl_fee_status.setText(fee_status);
            ob.lbl_g1.setText(g1);
            ob.lbl_g2.setText(g2);
            ob.lbl_g3.setText(g3);
            ob.lbl_paymode.setText(paymode);
            
            ///////////////////////////////////////////ob.lbl_image.setIcon(new ImageIcon(path));

            ob.hidden.setText(path);
            this.dispose();
            ob.setVisible(true);
            
        }

    }//GEN-LAST:event_btn_submitActionPerformed

    private void txt_emailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_emailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_emailActionPerformed

    private void com_courseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_com_courseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_com_courseActionPerformed

    private void txt_fnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_fnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_fnameActionPerformed

    private void txt_enrollActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_enrollActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_enrollActionPerformed

    private void com_sectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_com_sectionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_com_sectionActionPerformed

    private void btn_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_updateActionPerformed
        int cnt = 0;
        String txt = hidd.getText();
        System.out.println("Value taken from textbox:" + txt);
        String enroll = this.txt_enroll.getText();
        String name = this.txt_name.getText();
        String fname = this.txt_fname.getText();
        String mobile = this.txt_mobile.getText();
        String email = this.txt_email.getText();
        String gender = (String) this.com_gender.getSelectedItem();
        String course = (String) this.com_course.getSelectedItem();
        String sec = (String) this.com_section.getSelectedItem();
        String year = (String) this.com_year.getSelectedItem();
        String paymode=(String) com_paymode.getSelectedItem();
        try {
            Class.forName("java.sql.Driver");
            Connection conn = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/sportal", "root", "");
            PreparedStatement pstmt = conn.prepareStatement("update student_details set ENROL_NO=?,STUDENT_NAME=?,FATHER_NAME=?,GENDER=?,COURSE=?,YEAR=?,SECTION=?,PHONE_NO=?,EMAIL_ID=? where ENROL_NO='" + txt + "'");
            pstmt.setString(1, enroll);
            pstmt.setString(2, name);
            pstmt.setString(3, fname);
            pstmt.setString(4, gender);
            pstmt.setString(5, course);
            pstmt.setString(6, year);
            pstmt.setString(7, sec);
            pstmt.setString(8, mobile);
            pstmt.setString(9, email);
            int j = pstmt.executeUpdate();
            if (j > 0) {  // System.out.println("After Update Value of phone after update:"+mobile+"  "+enroll+"  "+name);
                // System.out.println("After Update Value of j:"+j);
                JOptionPane.showMessageDialog(null, "Record Updated Successfully \n");
            } else { //  System.out.println("Before Update Value of phone before update:"+mobile+"  "+enroll+"  "+name);
                //  System.out.println("Before update Value of j:"+j);
                JOptionPane.showMessageDialog(null, "Record Not Updated  \n");
            }
        } catch (Exception e) {
            System.out.print(e);
            e.printStackTrace();
        }

        String fee_status = (String) this.com_fee.getSelectedItem();
        //////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////////////==============Games Selection==========================///////
        //////////////////////////////////////////////////////////////////////////////////////////////////////////
        if (cricket.isSelected() == true) {
            cnt++;
            if (cnt < 4) {
                a[0] = "Cricket";
                if (fee == 0) {
                    fee = 100;
                } else {
                    fee += 100;
                }
            }
        }
        if (football.isSelected() == true) {
            cnt++;
            if (cnt < 4) {
                a[1] = "Football";
                if (fee == 0) {
                    fee = 50;
                } else {
                    fee += 50;
                }
            }
        }
        if (volley.isSelected() == true) {
            cnt++;
            if (cnt < 4) {
                a[2] = "Volley Ball";
                if (fee == 0) {
                    fee = 50;
                } else {
                    fee += 50;
                }
            }
        }
        if (basket.isSelected() == true) {
            cnt++;
            if (cnt < 4) {
                a[3] = "Basket Ball";
                if (fee == 0) {
                    fee = 50;
                } else {
                    fee += 50;
                }
            }
        }
        if (tt.isSelected() == true) {
            cnt++;
            if (cnt < 4) {
                a[4] = "Table Tennis";
                if (fee == 0) {
                    fee = 50;
                } else {
                    fee += 50;
                }
            }
        }
        if (chess.isSelected() == true) {
            cnt++;
            if (cnt < 4) {
                a[5] = "Chess";
                if (fee == 0) {
                    fee = 50;
                } else {
                    fee += 50;
                }
            }
        }
        if (carrom.isSelected() == true) {
            cnt++;
            if (cnt < 4) {
                a[6] = "Carrom";
                if (fee == 0) {
                    fee = 50;
                } else {
                    fee += 50;
                }

            }
        }
        if (tug.isSelected() == true) {
            cnt++;
            if (cnt < 4) {
                a[7] = "Tug Of War";
                if (fee == 0) {
                    fee = 50;
                } else {
                    fee += 50;
                }

            }
        }
        if (badminton.isSelected() == true) {
            cnt++;
            if (cnt < 4) {
                a[8] = "Badminton";
                if (fee == 0) {
                    fee = 50;
                } else {
                    fee += 50;
                }

            }
        }
        if (kabaddi.isSelected() == true) {
            cnt++;
            if (cnt < 4) {
                a[9] = "Kabaddi";
                if (fee == 0) {
                    fee = 50;
                } else {
                    fee += 50;
                }

            }
        }
        if (race100.isSelected() == true) {
            cnt++;
            if (cnt < 4) {
                a[10] = "Race 100m";
                if (fee == 0) {
                    fee = 50;
                } else {
                    fee += 50;
                }

            }
        }
        if (squash.isSelected() == true) {
            cnt++;
            if (cnt < 4) {
                a[11] = "Squash";
                if (fee == 0) {
                    fee = 50;
                } else {
                    fee += 50;
                }

            }
        }
        if (race200.isSelected() == true) {
            cnt++;
            if (cnt < 4) {
                a[12] = "Race 200m";
                if (fee == 0) {
                    fee = 50;
                } else {
                    fee += 50;
                }

            }
        }
        if (shotput.isSelected() == true) {
            cnt++;
            if (cnt < 4) {
                a[13] = "Shotput";
                if (fee == 0) {
                    fee = 50;
                } else {
                    fee += 50;
                }
            }
        }
        System.out.println("Total fees:" + fee + "Total Games:" + cnt + "\n");
        //for(int i=0;i<14;i++)
        //{System.out.println(a[i]);}
        if (cnt > 3) {
            JOptionPane.showMessageDialog(null, "Select only 3 events to participate.");
        }

        if (cnt == 1) {
            for (int i = 0; i < 14; i++) {
                if (a[i] != null) {
                    g1 = a[i];
                }
            }
            g2 = "None";
            g3 = "None";
            System.out.println("Selected Game 1:" + g1 + "\nSelected Game 2:" + g2 + "\nSelected Game 3:" + g3);
        }
        if (cnt == 2) {
            for (int i = 0; i < 14; i++) {
                if (a[i] != null) {
                    g1 = a[i];
                    a[i] = null;
                    break;
                }
            }
            for (int i = 0; i < 14; i++) {
                if (a[i] != null) {
                    g2 = a[i];
                    a[i] = null;
                    break;
                }
            }
            g3 = "None";
            System.out.println("Selected Game 1:" + g1 + "\nSelected Game 2:" + g2 + "\nSelected Game 3:" + g3);
            // for(int i=0;i<14;i++)
            // {System.out.println(a[i]);}
        }

        if (cnt == 3) {
            for (int i = 0; i < 14; i++) {
                if (a[i] != null) {
                    g1 = a[i];
                    a[i] = null;
                    break;
                }
            }
            for (int i = 0; i < 14; i++) {
                if (a[i] != null) {
                    g2 = a[i];
                    a[i] = null;
                    break;
                }
            }
            for (int i = 0; i < 14; i++) {
                if (a[i] != null) {
                    g3 = a[i];
                    a[i] = null;
                    break;
                }
            }
            System.out.println("Selected Game 1:" + g1 + "\nSelected Game 2:" + g2 + "\nSelected Game 3:" + g3);
        }
        try {
            Class.forName("java.sql.Driver");
            Connection conn = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/sportal", "root", "");
            PreparedStatement pstmt = conn.prepareStatement("update student_games set ENROL_NO=?,GAME_1=?,GAME_2=?,GAME_3=?,FEES=?,FEES_STATUS=?,PAYMENT_MODE=? where ENROL_NO='" + txt + "'");
            pstmt.setString(1, enroll);
            pstmt.setString(2, g1);
            pstmt.setString(3, g2);
            pstmt.setString(4, g3);
            pstmt.setString(5, "" + fee);
            pstmt.setString(6, fee_status);
            pstmt.setString(7,paymode);
            int j = pstmt.executeUpdate();
            if (j > 0) {
               // JOptionPane.showMessageDialog(null, "Record Updated Successfully in Games Table \n");
            } else {
               //JOptionPane.showMessageDialog(null, "Record Not Updated  in Games Table  \n");
            }
        } catch (Exception e) {
            System.out.print(e);
            e.printStackTrace();
        }
        this.dispose();

    }//GEN-LAST:event_btn_updateActionPerformed

    private void race200ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_race200ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_race200ActionPerformed

    private void cricketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cricketActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cricketActionPerformed

    private void com_genderFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_com_genderFocusLost
        // TODO add your handling code here:
        String gen = (String) com_gender.getSelectedItem();
        if (gen.equals("Female")) {
            race200.setEnabled(false);
            shotput.setEnabled(false);
        }
        if (gen.equals("Male")) {
            race200.setEnabled(true);
            shotput.setEnabled(true);
        }
    }//GEN-LAST:event_com_genderFocusLost

    private void txt_enrollFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_enrollFocusLost
        // TODO add your handling code here:
        String enroll = txt_enroll.getText();
        try {
            Class.forName("java.sql.Driver");
            java.sql.Connection conn = (java.sql.Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/sportal", "root", "");
            java.sql.PreparedStatement stmt = conn.prepareStatement("select * from student_details where enrol_no='" + enroll + "'");
            ResultSet rs = stmt.executeQuery();
            if (rs.next()) {
                f = 1;
                flag = 1;
                //JOptionPane.showMessageDialog(null, "User already registered!!!!!");
            } else {
                f = 0;
                flag = 0;
            }
        } catch (Exception e) {
            e.printStackTrace();
        }


    }//GEN-LAST:event_txt_enrollFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Regis_Page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Regis_Page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Regis_Page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Regis_Page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Regis_Page().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JCheckBox badminton;
    public javax.swing.JCheckBox basket;
    public javax.swing.JButton btn_submit;
    public javax.swing.JButton btn_update;
    public javax.swing.JCheckBox carrom;
    public javax.swing.JCheckBox chess;
    public javax.swing.JComboBox<String> com_course;
    public javax.swing.JComboBox<String> com_fee;
    public javax.swing.JComboBox<String> com_gender;
    public javax.swing.JComboBox<String> com_paymode;
    public javax.swing.JComboBox<String> com_section;
    public javax.swing.JComboBox<String> com_year;
    public javax.swing.JCheckBox cricket;
    public javax.swing.JCheckBox football;
    public javax.swing.JLabel hidd;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    public javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    public javax.swing.JLabel jLabel9;
    public javax.swing.JCheckBox kabaddi;
    public javax.swing.JCheckBox race100;
    public javax.swing.JCheckBox race200;
    public javax.swing.JCheckBox shotput;
    public javax.swing.JCheckBox squash;
    public javax.swing.JCheckBox tt;
    public javax.swing.JCheckBox tug;
    public javax.swing.JTextField txt_email;
    public javax.swing.JTextField txt_enroll;
    public javax.swing.JTextField txt_fname;
    public javax.swing.JTextField txt_mobile;
    public javax.swing.JTextField txt_name;
    public javax.swing.JCheckBox volley;
    // End of variables declaration//GEN-END:variables
}
